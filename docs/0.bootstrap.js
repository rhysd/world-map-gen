(window["webpackJsonp"] = window["webpackJsonp"] || []).push([[0],{

/***/ "./node_modules/obelisk.js/src/colors/AbstractColor.js":
/*!*************************************************************!*\
  !*** ./node_modules/obelisk.js/src/colors/AbstractColor.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/*jslint node: true*/\n\n\n\nvar AbstractColor, p;\n\nAbstractColor = function () {\n    this.initialize();\n};\np = AbstractColor.prototype;\n\n// public properties\n/**\n * The inner colors for elements of certain primitive\n */\np.inner = null;\n\n/**\n * The border colors for elements of certain primitive\n */\np.border = null;\n\n/**\n * The borderHighlight colors for elements of certain primitive\n */\np.borderHighlight = null;\n\n/**\n * The left side colors for elements of certain primitive\n */\np.left = null;\n\n/**\n * The right side colors for elements of certain primitive\n */\np.right = null;\n\n/**\n * The horizontal colors for elements of certain primitive\n */\np.horizontal = null;\n\n/**\n * The left slot side colors for elements of certain primitive\n */\np.leftSlope = null;\n\n/**\n * The right slot side colors for elements of certain primitive\n */\np.rightSlope = null;\n\n// constructor\np.initialize = function () {\n    return this;\n};\n\n// public methods\np.toString = function () {\n    return '[AbstractColor]';\n};\n\nmodule.exports = AbstractColor;\n\n\n//# sourceURL=webpack:///./node_modules/obelisk.js/src/colors/AbstractColor.js?");

/***/ }),

/***/ "./node_modules/obelisk.js/src/colors/CubeColor.js":
/*!*********************************************************!*\
  !*** ./node_modules/obelisk.js/src/colors/CubeColor.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/*jslint node: true*/\n\n\n\nvar AbstractColor = __webpack_require__(/*! ./AbstractColor */ \"./node_modules/obelisk.js/src/colors/AbstractColor.js\");\nvar ColorGeom = __webpack_require__(/*! ../utils/ColorGeom */ \"./node_modules/obelisk.js/src/utils/ColorGeom.js\");\n\nvar CubeColor, p;\nCubeColor = function (border, borderHighlight, left, right, horizontal) {\n    this.initialize(border, borderHighlight, left, right, horizontal);\n};\np = CubeColor.prototype = new AbstractColor();\n\n// public properties\np.BRIGHTNESS_GAIN = -20;\n\n// constructor\np.initialize = function (border, borderHighlight, left, right, horizontal) {\n    this.border = ColorGeom.get32(border === undefined ? 0x878787 : border);\n    this.borderHighlight = ColorGeom.get32(borderHighlight === undefined ? 0xFFFFFF : borderHighlight);\n    this.left = ColorGeom.get32(left === undefined ? 0xC9CFD0 : left);\n    this.right = ColorGeom.get32(right === undefined ? 0xE3E3E3 : right);\n    this.horizontal = ColorGeom.get32(horizontal === undefined ? 0xEEEFF0 : horizontal);\n\n    return this;\n};\n\n// public methods\np.getByHorizontalColor = function (horizontal) {\n    return new CubeColor(\n        ColorGeom.applyBrightness(horizontal, this.BRIGHTNESS_GAIN * 4),\n        //apply hightlight\n        ColorGeom.applyBrightness(horizontal, 0, true),\n        ColorGeom.applyBrightness(horizontal, this.BRIGHTNESS_GAIN * 2),\n        ColorGeom.applyBrightness(horizontal, this.BRIGHTNESS_GAIN),\n        horizontal\n    );\n};\n\np.toString = function () {\n    return '[CubeColor]';\n};\n\nmodule.exports = CubeColor;\n\n\n//# sourceURL=webpack:///./node_modules/obelisk.js/src/colors/CubeColor.js?");

/***/ }),

/***/ "./node_modules/obelisk.js/src/colors/LineColor.js":
/*!*********************************************************!*\
  !*** ./node_modules/obelisk.js/src/colors/LineColor.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/*jslint node: true*/\n\n\n\nvar AbstractColor = __webpack_require__(/*! ./AbstractColor */ \"./node_modules/obelisk.js/src/colors/AbstractColor.js\");\nvar ColorGeom = __webpack_require__(/*! ../utils/ColorGeom */ \"./node_modules/obelisk.js/src/utils/ColorGeom.js\");\n\nvar LineColor, p;\nLineColor = function (border, inner) {\n    this.initialize(border, inner);\n};\np = LineColor.prototype = new AbstractColor();\n\n// public properties\n\n// constructor\np.initialize = function (border) {\n    this.border = ColorGeom.get32(border === undefined ? 0x878787 : border);\n\n    return this;\n};\n\np.toString = function () {\n    return '[LineColor]';\n};\n\nmodule.exports = LineColor;\n\n\n//# sourceURL=webpack:///./node_modules/obelisk.js/src/colors/LineColor.js?");

/***/ }),

/***/ "./node_modules/obelisk.js/src/colors/PyramidColor.js":
/*!************************************************************!*\
  !*** ./node_modules/obelisk.js/src/colors/PyramidColor.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/*jslint node: true*/\n\n\n\nvar AbstractColor = __webpack_require__(/*! ./AbstractColor */ \"./node_modules/obelisk.js/src/colors/AbstractColor.js\");\nvar ColorGeom = __webpack_require__(/*! ../utils/ColorGeom */ \"./node_modules/obelisk.js/src/utils/ColorGeom.js\");\n\nvar PyramidColor, p;\nPyramidColor = function (border, borderHighlight, left, right) {\n    this.initialize(border, borderHighlight, left, right);\n};\np = PyramidColor.prototype = new AbstractColor();\n\n// public properties\np.BRIGHTNESS_GAIN = -20;\n\n// constructor\np.initialize = function (border, borderHighlight, left, right) {\n    this.border = ColorGeom.get32(border === undefined ? 0x949698 : border);\n    this.borderHighlight = ColorGeom.get32(borderHighlight === undefined ? 0xFFFFFF : borderHighlight);\n    this.left = ColorGeom.get32(left === undefined ? 0xE6E8E9 : left);\n    this.right = ColorGeom.get32(right === undefined ? 0xEEEFF0 : right);\n\n    return this;\n};\n\n// public methods\np.getByRightColor = function (right) {\n    return new PyramidColor(\n        ColorGeom.applyBrightness(right, this.BRIGHTNESS_GAIN * 4),\n        //apply hightlight\n        ColorGeom.applyBrightness(right, 0, true),\n        ColorGeom.applyBrightness(right, this.BRIGHTNESS_GAIN),\n        right\n    );\n};\n\np.toString = function () {\n    return '[PyramidColor]';\n};\n\nmodule.exports = PyramidColor;\n\n\n//# sourceURL=webpack:///./node_modules/obelisk.js/src/colors/PyramidColor.js?");

/***/ }),

/***/ "./node_modules/obelisk.js/src/colors/SideColor.js":
/*!*********************************************************!*\
  !*** ./node_modules/obelisk.js/src/colors/SideColor.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/*jslint node: true*/\n\n\n\nvar AbstractColor = __webpack_require__(/*! ./AbstractColor */ \"./node_modules/obelisk.js/src/colors/AbstractColor.js\");\nvar ColorGeom = __webpack_require__(/*! ../utils/ColorGeom */ \"./node_modules/obelisk.js/src/utils/ColorGeom.js\");\n\nvar SideColor, p;\nSideColor = function (border, inner) {\n    this.initialize(border, inner);\n};\np = SideColor.prototype = new AbstractColor();\n\n// public properties\np.BRIGHTNESS_GAIN = -20;\n\n// constructor\np.initialize = function (border, inner) {\n    this.border = ColorGeom.get32(border === undefined ? 0x878787 : border);\n    this.inner = ColorGeom.get32(inner === undefined ? 0xEEEEEE : inner);\n\n    return this;\n};\n\n// public methods\np.getByInnerColor = function (inner) {\n    return new SideColor(\n        ColorGeom.applyBrightness(inner, this.BRIGHTNESS_GAIN * 4),\n        inner\n    );\n};\n\np.toString = function () {\n    return '[SideColor]';\n};\n\nmodule.exports = SideColor;\n\n\n//# sourceURL=webpack:///./node_modules/obelisk.js/src/colors/SideColor.js?");

/***/ }),

/***/ "./node_modules/obelisk.js/src/colors/SlopeColor.js":
/*!**********************************************************!*\
  !*** ./node_modules/obelisk.js/src/colors/SlopeColor.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/*jslint node: true*/\n\n\n\nvar AbstractColor = __webpack_require__(/*! ./AbstractColor */ \"./node_modules/obelisk.js/src/colors/AbstractColor.js\");\nvar ColorGeom = __webpack_require__(/*! ../utils/ColorGeom */ \"./node_modules/obelisk.js/src/utils/ColorGeom.js\");\n\nvar SlopeColor, p;\nSlopeColor = function (border, borderHighlight, left, right, leftSlope, rightSlope) {\n    this.initialize(border, borderHighlight, left, right, leftSlope, rightSlope);\n};\np = SlopeColor.prototype = new AbstractColor();\n\n// public properties\np.BRIGHTNESS_GAIN = -20;\n\n// constructor\np.initialize = function (border, borderHighlight, left, right, leftSlope, rightSlope) {\n    this.border = ColorGeom.get32(border === undefined ? 0x949698 : border);\n    this.borderHighlight = ColorGeom.get32(borderHighlight === undefined ? 0xFFFFFF : borderHighlight);\n    this.left = ColorGeom.get32(left === undefined ? 0xC9CFD0 : left);\n    this.right = ColorGeom.get32(right === undefined ? 0xE6E8E9 : right);\n    this.leftSlope = ColorGeom.get32(leftSlope === undefined ? 0xDBDBDB : leftSlope);\n    this.rightSlope = ColorGeom.get32(rightSlope === undefined ? 0xDBDBDB : rightSlope);\n\n    return this;\n};\n\n// public methods\n\n/*\n * horizontal side doesn't actually exist in the Slope primitive\n * you can assign the same horizontal color as cube\n * so that you will be able to arrange the slope with cube\n */\np.getByHorizontalColor = function (horizontal) {\n    return new SlopeColor(\n        ColorGeom.applyBrightness(horizontal, this.BRIGHTNESS_GAIN * 4),\n        //apply hightlight\n        ColorGeom.applyBrightness(horizontal, 0, true),\n        ColorGeom.applyBrightness(horizontal, this.BRIGHTNESS_GAIN * 2),\n        ColorGeom.applyBrightness(horizontal, this.BRIGHTNESS_GAIN),\n        ColorGeom.applyBrightness(horizontal, this.BRIGHTNESS_GAIN * 1.5),\n        ColorGeom.applyBrightness(horizontal, this.BRIGHTNESS_GAIN * 0.5)\n    );\n};\n\np.toString = function () {\n    return '[SlopeColor]';\n};\n\nmodule.exports = SlopeColor;\n\n\n//# sourceURL=webpack:///./node_modules/obelisk.js/src/colors/SlopeColor.js?");

/***/ }),

/***/ "./node_modules/obelisk.js/src/dimensions/AbstractDimension.js":
/*!*********************************************************************!*\
  !*** ./node_modules/obelisk.js/src/dimensions/AbstractDimension.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/*jslint node: true*/\n\n\n\nvar AbstractDimension, p;\nAbstractDimension = function () {\n    this.initialize();\n};\np = AbstractDimension.prototype;\n\n// public properties\n/**\n * The x Axis dimensions in 22.6 degrees coordinate\n */\np.xAxis = null;\n\n/**\n * The y Axis dimensions in 22.6 degrees coordinate\n */\np.yAxis = null;\n\n/**\n * The z Axis dimensions in 22.6 degrees coordinate\n */\np.zAxis = null;\n\n/**\n * Pyramid tall mode\n */\np.tall = false;\n\n// constructor\np.initialize = function () {\n    return this;\n};\n\n// public methods\np.toString = function () {\n    return '[AbstractDimension]';\n};\n\nmodule.exports = AbstractDimension;\n\n\n//# sourceURL=webpack:///./node_modules/obelisk.js/src/dimensions/AbstractDimension.js?");

/***/ }),

/***/ "./node_modules/obelisk.js/src/dimensions/BrickDimension.js":
/*!******************************************************************!*\
  !*** ./node_modules/obelisk.js/src/dimensions/BrickDimension.js ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/*jslint node: true*/\n\n\n\nvar AbstractDimension = __webpack_require__(/*! ./AbstractDimension */ \"./node_modules/obelisk.js/src/dimensions/AbstractDimension.js\");\n\nvar BrickDimension, p;\nBrickDimension = function (xAxis, yAxis) {\n    this.initialize(xAxis, yAxis);\n};\np = BrickDimension.prototype = new AbstractDimension();\n\n// constructor\np.initialize = function (xAxis, yAxis) {\n    this.xAxis = xAxis || 30;\n    this.yAxis = yAxis || 30;\n\n    if (this.xAxis % 2 === 1 || this.yAxis % 2 === 1) {\n        throw new Error('x,yAxis must be even number');\n    }\n\n    // xAxis || yAxis = 4 floodFill could not be applied\n    if (this.xAxis <= 4 || this.yAxis <= 4) {\n        throw new Error('dimension is too small');\n    }\n\n    return this;\n};\n\np.toString = function () {\n    return '[BrickDimension]';\n};\n\nmodule.exports = BrickDimension;\n\n\n//# sourceURL=webpack:///./node_modules/obelisk.js/src/dimensions/BrickDimension.js?");

/***/ }),

/***/ "./node_modules/obelisk.js/src/dimensions/CubeDimension.js":
/*!*****************************************************************!*\
  !*** ./node_modules/obelisk.js/src/dimensions/CubeDimension.js ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/*jslint node: true*/\n\n\n\nvar AbstractDimension = __webpack_require__(/*! ./AbstractDimension */ \"./node_modules/obelisk.js/src/dimensions/AbstractDimension.js\");\n\nvar CubeDimension, p;\nCubeDimension = function (xAxis, yAxis, zAxis) {\n    this.initialize(xAxis, yAxis, zAxis);\n};\np = CubeDimension.prototype = new AbstractDimension();\n\n// constructor\np.initialize = function (xAxis, yAxis, zAxis) {\n    this.xAxis = xAxis || 30;\n    this.yAxis = yAxis || 30;\n    this.zAxis = zAxis || 30;\n\n    if (this.xAxis % 2 === 1 || this.yAxis % 2 === 1) {\n        throw new Error('x,yAxis must be even number');\n    }\n\n    // xAxis || yAxis = 4 floodFill could not be applied\n    if (this.xAxis <= 4 || this.yAxis <= 4 || this.zAxis <= 2) {\n        throw new Error('dimension is too small');\n    }\n\n    return this;\n};\n\np.toString = function () {\n    return '[CubeDimension]';\n};\n\nmodule.exports = CubeDimension;\n\n\n//# sourceURL=webpack:///./node_modules/obelisk.js/src/dimensions/CubeDimension.js?");

/***/ }),

/***/ "./node_modules/obelisk.js/src/dimensions/LineXDimension.js":
/*!******************************************************************!*\
  !*** ./node_modules/obelisk.js/src/dimensions/LineXDimension.js ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/*jslint node: true*/\n\n\n\nvar AbstractDimension = __webpack_require__(/*! ./AbstractDimension */ \"./node_modules/obelisk.js/src/dimensions/AbstractDimension.js\");\n\nvar LineXDimension, p;\nLineXDimension = function (axis) {\n    this.initialize(axis);\n};\np = LineXDimension.prototype = new AbstractDimension();\n\n// constructor\np.initialize = function (xAxis) {\n    this.xAxis = xAxis || 30;\n\n    if (this.xAxis % 2 === 1) {\n        throw new Error('xAxis must be even number');\n    }\n\n    if (this.xAxis < 2) {\n        throw new Error('dimension is too small');\n    }\n\n    return this;\n};\n\np.toString = function () {\n    return '[LineXDimension]';\n};\n\nmodule.exports = LineXDimension;\n\n\n//# sourceURL=webpack:///./node_modules/obelisk.js/src/dimensions/LineXDimension.js?");

/***/ }),

/***/ "./node_modules/obelisk.js/src/dimensions/LineYDimension.js":
/*!******************************************************************!*\
  !*** ./node_modules/obelisk.js/src/dimensions/LineYDimension.js ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/*jslint node: true*/\n\n\n\nvar AbstractDimension = __webpack_require__(/*! ./AbstractDimension */ \"./node_modules/obelisk.js/src/dimensions/AbstractDimension.js\");\n\nvar LineYDimension, p;\nLineYDimension = function (axis) {\n    this.initialize(axis);\n};\np = LineYDimension.prototype = new AbstractDimension();\n\n// constructor\np.initialize = function (yAxis) {\n    this.yAxis = yAxis || 30;\n\n    if (this.yAxis % 2 === 1) {\n        throw new Error('yAxis must be even number');\n    }\n\n    if (this.yAxis < 2) {\n        throw new Error('dimension is too small');\n    }\n\n    return this;\n};\n\np.toString = function () {\n    return '[LineYDimension]';\n};\n\nmodule.exports = LineYDimension;\n\n\n//# sourceURL=webpack:///./node_modules/obelisk.js/src/dimensions/LineYDimension.js?");

/***/ }),

/***/ "./node_modules/obelisk.js/src/dimensions/LineZDimension.js":
/*!******************************************************************!*\
  !*** ./node_modules/obelisk.js/src/dimensions/LineZDimension.js ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/*jslint node: true*/\n\n\n\nvar AbstractDimension = __webpack_require__(/*! ./AbstractDimension */ \"./node_modules/obelisk.js/src/dimensions/AbstractDimension.js\");\n\nvar LineZDimension, p;\nLineZDimension = function (axis) {\n    this.initialize(axis);\n};\np = LineZDimension.prototype = new AbstractDimension();\n\n// constructor\np.initialize = function (zAxis) {\n    this.zAxis = zAxis || 30;\n\n    if (this.zAxis <= 0) {\n        throw new Error('dimension is too small');\n    }\n\n    return this;\n};\n\np.toString = function () {\n    return '[LineZDimension]';\n};\n\nmodule.exports = LineZDimension;\n\n\n//# sourceURL=webpack:///./node_modules/obelisk.js/src/dimensions/LineZDimension.js?");

/***/ }),

/***/ "./node_modules/obelisk.js/src/dimensions/PyramidDimension.js":
/*!********************************************************************!*\
  !*** ./node_modules/obelisk.js/src/dimensions/PyramidDimension.js ***!
  \********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/*jslint node: true*/\n\n\n\nvar AbstractDimension = __webpack_require__(/*! ./AbstractDimension */ \"./node_modules/obelisk.js/src/dimensions/AbstractDimension.js\");\n\nvar PyramidDimension, p;\nPyramidDimension = function (axis, tall) {\n    this.initialize(axis, tall);\n};\np = PyramidDimension.prototype = new AbstractDimension();\n\n// constructor\np.initialize = function (axis, tall) {\n    this.xAxis = axis || 30;\n    this.yAxis = axis || 30;\n    this.tall = tall || false;\n\n    if (this.xAxis % 2 === 1) {\n        throw new Error('axis must be even number');\n    }\n\n    if (this.xAxis <= 4) {\n        throw new Error('dimension is too small');\n    }\n\n    return this;\n};\n\np.toString = function () {\n    return '[PyramidDimension]';\n};\n\nmodule.exports = PyramidDimension;\n\n\n//# sourceURL=webpack:///./node_modules/obelisk.js/src/dimensions/PyramidDimension.js?");

/***/ }),

/***/ "./node_modules/obelisk.js/src/dimensions/SideXDimension.js":
/*!******************************************************************!*\
  !*** ./node_modules/obelisk.js/src/dimensions/SideXDimension.js ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/*jslint node: true*/\n\n\n\nvar AbstractDimension = __webpack_require__(/*! ./AbstractDimension */ \"./node_modules/obelisk.js/src/dimensions/AbstractDimension.js\");\n\nvar SideXDimension, p;\nSideXDimension = function (xAxis, zAxis) {\n    this.initialize(xAxis, zAxis);\n};\np = SideXDimension.prototype = new AbstractDimension();\n\n// constructor\np.initialize = function (xAxis, zAxis) {\n    this.xAxis = xAxis || 30;\n    this.zAxis = zAxis || 30;\n\n    if (this.xAxis % 2 === 1) {\n        throw new Error('xAxis must be even number');\n    }\n\n    // xAxis || zAxis = 4 floodFill could not be applied\n    if (this.xAxis <= 4 || this.zAxis <= 2) {\n        throw new Error('dimension is too small');\n    }\n\n    return this;\n};\n\np.toString = function () {\n    return '[SideXDimension]';\n};\n\nmodule.exports = SideXDimension;\n\n\n//# sourceURL=webpack:///./node_modules/obelisk.js/src/dimensions/SideXDimension.js?");

/***/ }),

/***/ "./node_modules/obelisk.js/src/dimensions/SideYDimension.js":
/*!******************************************************************!*\
  !*** ./node_modules/obelisk.js/src/dimensions/SideYDimension.js ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/*jslint node: true*/\n\n\n\nvar AbstractDimension = __webpack_require__(/*! ./AbstractDimension */ \"./node_modules/obelisk.js/src/dimensions/AbstractDimension.js\");\n\nvar SideYDimension, p;\n\nSideYDimension = function (yAxis, zAxis) {\n    this.initialize(yAxis, zAxis);\n};\np = SideYDimension.prototype = new AbstractDimension();\n\n// constructor\np.initialize = function (yAxis, zAxis) {\n    this.yAxis = yAxis || 30;\n    this.zAxis = zAxis || 30;\n\n    if (this.yAxis % 2 === 1) {\n        throw new Error('yAxis must be even number');\n    }\n\n    // yAxis || zAxis = 4 floodFill could not be applied\n    if (this.yAxis <= 4 || this.zAxis <= 2) {\n        throw new Error('dimension is too small');\n    }\n\n    return this;\n};\n\np.toString = function () {\n    return '[SideYDimension]';\n};\n\nmodule.exports = SideYDimension;\n\n\n//# sourceURL=webpack:///./node_modules/obelisk.js/src/dimensions/SideYDimension.js?");

/***/ }),

/***/ "./node_modules/obelisk.js/src/dimensions/SlopeDimension.js":
/*!******************************************************************!*\
  !*** ./node_modules/obelisk.js/src/dimensions/SlopeDimension.js ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/*jslint node: true*/\n\n\n\nvar AbstractDimension = __webpack_require__(/*! ./AbstractDimension */ \"./node_modules/obelisk.js/src/dimensions/AbstractDimension.js\");\n\nvar SlopeDimension, p;\nSlopeDimension = function (xAxis, yAxis) {\n    this.initialize(xAxis, yAxis);\n};\np = SlopeDimension.prototype = new AbstractDimension();\n\n// constructor\np.initialize = function (xAxis, yAxis) {\n    this.xAxis = xAxis || 30;\n    this.yAxis = yAxis || 30;\n\n    if (this.xAxis % 2 === 1 || this.yAxis % 2 === 1) {\n        throw new Error('xAxis and yAxis must be even number');\n    }\n\n    if (this.xAxis <= 4 || this.yAxis <= 4) {\n        throw new Error('dimension is too small');\n    }\n\n    return this;\n};\n\np.toString = function () {\n    return '[SlopeDimension]';\n};\n\nmodule.exports = SlopeDimension;\n\n\n//# sourceURL=webpack:///./node_modules/obelisk.js/src/dimensions/SlopeDimension.js?");

/***/ }),

/***/ "./node_modules/obelisk.js/src/display/BitmapData.js":
/*!***********************************************************!*\
  !*** ./node_modules/obelisk.js/src/display/BitmapData.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/*jslint node: true*/\n\n\n\nvar CanvasManager = __webpack_require__(/*! ../utils/CanvasManager */ \"./node_modules/obelisk.js/src/utils/CanvasManager.js\");\n\nvar BitmapData, p;\nBitmapData = function (w, h, useDefaultCanvas) {\n    this.initialize(w, h, useDefaultCanvas);\n};\np = BitmapData.prototype;\n\n// public property\np.imageData = null;\np.canvas = null;\np.context = null;\n\n// constructor\np.initialize = function (w, h, useDefaultCanvas) {\n    if (w === undefined || h === undefined) {\n        throw new Error('BitmapData width or height is missing');\n    }\n\n    if (useDefaultCanvas) {\n        this.canvas = CanvasManager.getDefaultCanvas();\n    } else {\n        this.canvas = CanvasManager.getNewCanvas();\n    }\n\n    this.canvas.setAttribute('width', w);\n    this.canvas.setAttribute('height', h);\n\n    this.context = this.canvas.getContext('2d');\n    this.context.clearRect(0, 0, this.canvas.width, this.canvas.height);\n\n    this.context.mozImageSmoothingEnabled = false;\n    this.context.msImageSmoothingEnabled = false;\n    this.context.imageSmoothingEnabled = false;\n\n    this.imageData = this.context.createImageData(w, h);\n\n    return this;\n};\n\np.setPixel = function (posX, posY, color) {\n    var index = (posY * this.imageData.width + posX) * 4;\n    this.setPixelByIndex(index, color);\n};\n\np.setPixelByIndex = function (index, color) {\n    var pixels = this.imageData.data;\n\n    pixels[index] = (color >>> 16) & 0xFF;\n    pixels[index + 1] = (color >>> 8) & 0xFF;\n    pixels[index + 2] = (color >>> 0) & 0xFF;\n    pixels[index + 3] = (color >>> 24) & 0xFF;\n};\n\np.checkPixelAvailable = function (x, y) {\n    var index = (y * this.imageData.width + x) * 4;\n\n    return this.imageData.data[index + 3] === 0;\n};\n\np.floodFill = function (posX, posY, color) {\n    if (((color >>> 24) & 0xFF) === 0x00) {\n        // transparent flood fill\n        return;\n    }\n\n    var x = posX, y = posY,\n        stack = [],\n        nowCol = [],\n        prevCol = [],\n        col, row, matchFlag, newStart,\n        w = this.imageData.width,\n        h = this.imageData.height,\n        i, j;\n\n    // bound reach\n    if (x < 0 || y < 0 || x >= w || y >= h) {\n        return;\n    }\n\n    // first point check fail\n    if (!this.checkPixelAvailable(x, y)) {\n        throw new Error('Start point for flood fill is already filled');\n    }\n\n    // left side flood fill\n    for (col = x; col >= 0; col -= 1) {\n        // top side\n        for (row = y; row >= 0; row -= 1) {\n            if (this.checkPixelAvailable(col, row)) {\n                // available pixel\n                stack.push((row * w + col) * 4);\n                nowCol.push(row);\n            } else {\n                // first one is invalid pixel && not at col top\n                if (row === y && this.checkPixelAvailable(col + 1, row - 1)) {\n                    // next one is valid\n                    if (this.checkPixelAvailable(col, row - 1)) {\n                        newStart = row - 1;\n                    } else {\n                        if (this.checkPixelAvailable(col + 1, row - 2)) {\n                            newStart = row - 2;\n                        } else {\n                            // fail, assign max value to avoid loop below\n                            newStart = -1;\n                        }\n                    }\n\n                    for (row = newStart; row >= 0; row -= 1) {\n                        if (this.checkPixelAvailable(col, row)) {\n                            // available pixel\n                            stack.push((row * w + col) * 4);\n                            nowCol.push(row);\n                        } else {\n                            break;\n                        }\n                    }\n                }\n\n                break;\n            }\n        }\n\n\n        // bottom side\n        for (row = y; row < h; row += 1) {\n            if (this.checkPixelAvailable(col, row)) {\n                // available pixel\n                stack.push((row * w + col) * 4);\n                nowCol.push(row);\n            } else {\n                // first one is invalid pixel && not at col bottom\n                if (row === y && this.checkPixelAvailable(col + 1, row + 1)) {\n\n                    // next one is valid\n                    if (this.checkPixelAvailable(col, row + 1)) {\n                        newStart = row + 1;\n                    } else {\n                        if (this.checkPixelAvailable(col + 1, row + 2)) {\n                            newStart = row + 2;\n                        } else {\n                            // fail, assign max value to avoid loop below\n                            newStart = h;\n                        }\n                    }\n\n                    for (row = newStart; row < h; row += 1) {\n                        if (this.checkPixelAvailable(col, row)) {\n                            // available pixel\n                            stack.push((row * w + col) * 4);\n                            nowCol.push(row);\n                        } else {\n                            break;\n                        }\n                    }\n                }\n\n                break;\n            }\n        }\n\n        // compare with previous column\n        // for first column\n        // the given point should be inside the container\n        if (col === x) {\n            prevCol = nowCol.concat();\n        }\n\n        matchFlag = false;\n\n        for (i = 0; i < prevCol.length; i += 1) {\n            for (j = 0; j < prevCol.length; j += 1) {\n                if (nowCol[j] === prevCol[i]) {\n                    matchFlag = true;\n                    y = prevCol[i];\n                    break;\n                }\n            }\n\n            if (matchFlag) {\n                break;\n            }\n        }\n\n        if (matchFlag) {\n            prevCol = nowCol.concat();\n            nowCol = [];\n        } else {\n            // bound reach\n            break;\n        }\n    }\n\n    // reset start point\n    x = posX;\n    y = posY;\n    prevCol = [];\n    nowCol = [];\n\n    // right side flood fill\n    for (col = x; col < w; col += 1) {\n\n        // top side\n        for (row = y; row >= 0; row -= 1) {\n            if (this.checkPixelAvailable(col, row)) {\n                // available pixel\n                stack.push((row * w + col) * 4);\n                nowCol.push(row);\n            } else {\n                // first one is invalid pixel && not at col top\n                if (row === y && this.checkPixelAvailable(col - 1, row - 1)) {\n                    // next one is valid\n                    if (this.checkPixelAvailable(col, row - 1)) {\n                        newStart = row - 1;\n                    } else {\n                        if (this.checkPixelAvailable(col - 1, row - 2)) {\n                            newStart = row - 2;\n                        } else {\n                            // fail, assign max value to avoid loop below\n                            newStart = -1;\n                        }\n                    }\n\n                    for (row = newStart; row >= 0; row -= 1) {\n                        if (this.checkPixelAvailable(col, row)) {\n                            // available pixel\n                            stack.push((row * w + col) * 4);\n                            nowCol.push(row);\n                        } else {\n                            break;\n                        }\n                    }\n                }\n\n                break;\n            }\n        }\n\n        // bottom side\n        for (row = y; row < h; row += 1) {\n            if (this.checkPixelAvailable(col, row)) {\n                // available pixel\n                stack.push((row * w + col) * 4);\n                nowCol.push(row);\n            } else {\n                // first one is invalid pixel && not at col bottom\n                if (row === y && this.checkPixelAvailable(col - 1, row + 1)) {\n\n                    // next one is valid\n                    if (this.checkPixelAvailable(col, row + 1)) {\n                        newStart = row + 1;\n                    } else {\n                        if (this.checkPixelAvailable(col - 1, row + 2)) {\n                            newStart = row + 2;\n                        } else {\n                            // fail, assign max value to avoid loop below\n                            newStart = h;\n                        }\n                    }\n\n                    for (row = newStart; row < h; row += 1) {\n                        if (this.checkPixelAvailable(col, row)) {\n                            // available pixel\n                            stack.push((row * w + col) * 4);\n                            nowCol.push(row);\n                        } else {\n                            break;\n                        }\n                    }\n                }\n\n                break;\n            }\n        }\n\n        // compare with previous column\n        // for first column\n        // the given point should be inside the container\n        if (col === x) {\n            prevCol = nowCol.concat();\n        }\n\n        matchFlag = false;\n\n        for (i = 0; i < prevCol.length; i += 1) {\n            for (j = 0; j < prevCol.length; j += 1) {\n                if (nowCol[j] === prevCol[i]) {\n                    matchFlag = true;\n                    y = prevCol[i];\n                    break;\n                }\n            }\n\n            if (matchFlag) {\n                break;\n            }\n        }\n\n        if (matchFlag) {\n            prevCol = nowCol.concat();\n            nowCol = [];\n        } else {\n            // bound reach\n            break;\n        }\n    }\n\n    // fill image data\n    for (i = 0; i < stack.length; i += 1) {\n        this.setPixelByIndex(stack[i], color);\n    }\n};\n\np.toString = function () {\n    return '[BitmapData]';\n};\n\nmodule.exports = BitmapData;\n\n\n//# sourceURL=webpack:///./node_modules/obelisk.js/src/display/BitmapData.js?");

/***/ }),

/***/ "./node_modules/obelisk.js/src/display/PixelObject.js":
/*!************************************************************!*\
  !*** ./node_modules/obelisk.js/src/display/PixelObject.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/*jslint node: true*/\n\n\n\nvar Point3D = __webpack_require__(/*! ../geom/Point3D */ \"./node_modules/obelisk.js/src/geom/Point3D.js\");\n\nvar PixelObject, p;\nPixelObject = function (primitive, point3D) {\n    this.initialize(primitive, point3D);\n};\np = PixelObject.prototype;\n\n// public properties\np.x = null;\np.y = null;\np.canvas = null;\n\n// constructor\np.initialize = function (primitive, point3D) {\n    if (!primitive) {\n        throw new Error('Primitive is not defined');\n    }\n\n    var p3D = point3D || new Point3D();\n\n    this.canvas = primitive.canvas;\n    this.x = primitive.matrix.tx + p3D.x - p3D.y;\n    this.y = primitive.matrix.ty + Math.floor(p3D.x / 2 + p3D.y / 2) - p3D.z;\n\n    return this;\n};\n\n// public methods\n\np.toString = function () {\n    return '[PixelObject]';\n};\n\n// private methods\n\nmodule.exports = PixelObject;\n\n\n//# sourceURL=webpack:///./node_modules/obelisk.js/src/display/PixelObject.js?");

/***/ }),

/***/ "./node_modules/obelisk.js/src/display/PixelView.js":
/*!**********************************************************!*\
  !*** ./node_modules/obelisk.js/src/display/PixelView.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/*jslint node: true*/\n/*global jQuery:true*/\n\n\n\nvar Point = __webpack_require__(/*! ../geom/Point */ \"./node_modules/obelisk.js/src/geom/Point.js\");\nvar PixelObject = __webpack_require__(/*! ../display/PixelObject */ \"./node_modules/obelisk.js/src/display/PixelObject.js\");\n\nvar PixelView, p;\nPixelView = function (canvas, point) {\n    this.initialize(canvas, point);\n};\np = PixelView.prototype;\n\n// public properties\np.canvas = null;\np.context = null;\np.point = null;\n\n// constructor\np.initialize = function (canvas, point) {\n    if (!canvas) {\n        throw new Error('Canvas is not defined');\n    }\n\n    try {\n        if (canvas instanceof jQuery) {\n            canvas = canvas.get(0);\n        }\n    } catch (ignore) {\n    }\n\n    this.canvas = canvas;\n\n    this.context = this.canvas.getContext('2d');\n    this.context.mozImageSmoothingEnabled = false;\n    this.context.msImageSmoothingEnabled = false;\n    this.context.imageSmoothingEnabled = false;\n\n    this.point = point || new Point(0, 0);\n\n    return this;\n};\n\n// public methods\np.renderObject = function (primitive, point3D) {\n    var po = new PixelObject(primitive, point3D);\n    this.context.drawImage(po.canvas, this.point.x + po.x, this.point.y + po.y);\n};\n\np.clear = function () {\n    this.context.clearRect(0, 0, this.canvas.width, this.canvas.height);\n};\n\np.toString = function () {\n    return '[PixelView]';\n};\n\nmodule.exports = PixelView;\n\n\n//# sourceURL=webpack:///./node_modules/obelisk.js/src/display/PixelView.js?");

/***/ }),

/***/ "./node_modules/obelisk.js/src/geom/Matrix.js":
/*!****************************************************!*\
  !*** ./node_modules/obelisk.js/src/geom/Matrix.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/*jslint node: true*/\n\n\n\nvar Matrix, p;\nMatrix = function (a, b, c, d, tx, ty) {\n    this.initialize(a, b, c, d, tx, ty);\n};\np = Matrix.prototype;\n\n// public properties:\n/**\n * Position (0, 0) in a 3x3 matrix.\n * @property a\n * @type Number\n **/\np.a = 1;\n\n/**\n * Position (0, 1) in a 3x3 matrix.\n * @property b\n * @type Number\n **/\np.b = 0;\n\n/**\n * Position (1, 0) in a 3x3 matrix.\n * @property c\n * @type Number\n **/\np.c = 0;\n\n/**\n * Position (1, 1) in a 3x3 matrix.\n * @property d\n * @type Number\n **/\np.d = 1;\n\n/**\n * Position (2, 0) in a 3x3 matrix.\n * @property tx\n * @type Number\n **/\np.tx = 0;\n\n/**\n * Position (2, 1) in a 3x3 matrix.\n * @property ty\n * @type Number\n **/\np.ty = 0;\n\n// constructor\np.initialize = function (a, b, c, d, tx, ty) {\n    this.a = (a === undefined) ? 1 : a;\n    this.b = b || 0;\n    this.c = c || 0;\n    this.d = (d === undefined) ? 1 : d;\n    this.tx = tx || 0;\n    this.ty = ty || 0;\n\n    return this;\n};\n\n// public methods\np.toString = function () {\n    return '[Matrix]';\n};\n\nmodule.exports = Matrix;\n\n\n//# sourceURL=webpack:///./node_modules/obelisk.js/src/geom/Matrix.js?");

/***/ }),

/***/ "./node_modules/obelisk.js/src/geom/Point.js":
/*!***************************************************!*\
  !*** ./node_modules/obelisk.js/src/geom/Point.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/*jslint node: true*/\n\n\n\nvar Point, p;\nPoint = function (x, y) {\n    this.initialize(x, y);\n};\np = Point.prototype;\n\n// public properties\np.x = 0;\np.y = 0;\n\n// constructor\np.initialize = function (x, y) {\n    this.x = (x === undefined ? 0 : x);\n    this.y = (y === undefined ? 0 : y);\n\n    return this;\n};\n\n// public methods\np.toString = function () {\n    return '[Point x : ' + this.x + ', y : ' + this.y + ']';\n};\n\nmodule.exports = Point;\n\n\n//# sourceURL=webpack:///./node_modules/obelisk.js/src/geom/Point.js?");

/***/ }),

/***/ "./node_modules/obelisk.js/src/geom/Point3D.js":
/*!*****************************************************!*\
  !*** ./node_modules/obelisk.js/src/geom/Point3D.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/*jslint node: true*/\n\n\n\nvar Point = __webpack_require__(/*! ./Point */ \"./node_modules/obelisk.js/src/geom/Point.js\");\n\nvar Point3D, p;\nPoint3D = function (x, y, z) {\n    this.initialize(x, y, z);\n};\np = Point3D.prototype;\n\n// public properties\np.x = 0;\np.y = 0;\np.z = 0;\n\n// constructor\np.initialize = function (x, y, z) {\n    this.x = (x === undefined ? 0 : x);\n    this.y = (y === undefined ? 0 : y);\n    this.z = (z === undefined ? 0 : z);\n\n    return this;\n};\n\n// public methods\np.toGlobalCoordinates = function (offset) {\n    var p2D = new Point(\n        this.x - this.y,\n        Math.floor(this.x / 2 + this.y / 2) - this.z\n    );\n\n    if (offset !== undefined) {\n        p2D.x = p2D.x + offset.x;\n        p2D.y = p2D.y + offset.y;\n    }\n\n    return p2D;\n};\n\np.toString = function () {\n    return '[Point3D x : ' + this.x + ', y : ' + this.y + ', z: ' + this.z + ']';\n};\n\nmodule.exports = Point3D;\n\n\n//# sourceURL=webpack:///./node_modules/obelisk.js/src/geom/Point3D.js?");

/***/ }),

/***/ "./node_modules/obelisk.js/src/obelisk.js":
/*!************************************************!*\
  !*** ./node_modules/obelisk.js/src/obelisk.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/*jslint node: true*/\n/*global window:true*/\n\n\n\n/**\n * @namespace obelisk\n **/\nvar obelisk = {};\n\nobelisk.Cube = __webpack_require__(/*! ./primitives/Cube */ \"./node_modules/obelisk.js/src/primitives/Cube.js\");\nobelisk.Brick = __webpack_require__(/*! ./primitives/Brick */ \"./node_modules/obelisk.js/src/primitives/Brick.js\");\nobelisk.Pyramid = __webpack_require__(/*! ./primitives/Pyramid */ \"./node_modules/obelisk.js/src/primitives/Pyramid.js\");\nobelisk.LineX = __webpack_require__(/*! ./primitives/LineX */ \"./node_modules/obelisk.js/src/primitives/LineX.js\");\nobelisk.LineY = __webpack_require__(/*! ./primitives/LineY */ \"./node_modules/obelisk.js/src/primitives/LineY.js\");\nobelisk.LineZ = __webpack_require__(/*! ./primitives/LineZ */ \"./node_modules/obelisk.js/src/primitives/LineZ.js\");\nobelisk.SideX = __webpack_require__(/*! ./primitives/SideX */ \"./node_modules/obelisk.js/src/primitives/SideX.js\");\nobelisk.SideY = __webpack_require__(/*! ./primitives/SideY */ \"./node_modules/obelisk.js/src/primitives/SideY.js\");\nobelisk.SlopeEast = __webpack_require__(/*! ./primitives/SlopeEast */ \"./node_modules/obelisk.js/src/primitives/SlopeEast.js\");\nobelisk.SlopeNorth = __webpack_require__(/*! ./primitives/SlopeNorth */ \"./node_modules/obelisk.js/src/primitives/SlopeNorth.js\");\nobelisk.SlopeSouth = __webpack_require__(/*! ./primitives/SlopeSouth */ \"./node_modules/obelisk.js/src/primitives/SlopeSouth.js\");\nobelisk.SlopeWest = __webpack_require__(/*! ./primitives/SlopeWest */ \"./node_modules/obelisk.js/src/primitives/SlopeWest.js\");\n\nobelisk.ColorPattern = __webpack_require__(/*! ./utils/ColorPattern */ \"./node_modules/obelisk.js/src/utils/ColorPattern.js\");\nobelisk.ColorGeom = __webpack_require__(/*! ./utils/ColorGeom */ \"./node_modules/obelisk.js/src/utils/ColorGeom.js\");\nobelisk.CanvasManager = __webpack_require__(/*! ./utils/CanvasManager */ \"./node_modules/obelisk.js/src/utils/CanvasManager.js\");\nobelisk.CanvasTool = __webpack_require__(/*! ./utils/CanvasTool */ \"./node_modules/obelisk.js/src/utils/CanvasTool.js\");\n\nobelisk.Matrix = __webpack_require__(/*! ./geom/Matrix */ \"./node_modules/obelisk.js/src/geom/Matrix.js\");\nobelisk.Point = __webpack_require__(/*! ./geom/Point */ \"./node_modules/obelisk.js/src/geom/Point.js\");\nobelisk.Point3D = __webpack_require__(/*! ./geom/Point3D */ \"./node_modules/obelisk.js/src/geom/Point3D.js\");\n\nobelisk.PixelView = __webpack_require__(/*! ./display/PixelView */ \"./node_modules/obelisk.js/src/display/PixelView.js\");\nobelisk.PixelObject = __webpack_require__(/*! ./display/PixelObject */ \"./node_modules/obelisk.js/src/display/PixelObject.js\");\nobelisk.BitmapData = __webpack_require__(/*! ./display/BitmapData */ \"./node_modules/obelisk.js/src/display/BitmapData.js\");\n\nobelisk.BrickDimension = __webpack_require__(/*! ./dimensions/BrickDimension */ \"./node_modules/obelisk.js/src/dimensions/BrickDimension.js\");\nobelisk.CubeDimension = __webpack_require__(/*! ./dimensions/CubeDimension */ \"./node_modules/obelisk.js/src/dimensions/CubeDimension.js\");\nobelisk.PyramidDimension = __webpack_require__(/*! ./dimensions/PyramidDimension */ \"./node_modules/obelisk.js/src/dimensions/PyramidDimension.js\");\nobelisk.LineXDimension = __webpack_require__(/*! ./dimensions/LineXDimension */ \"./node_modules/obelisk.js/src/dimensions/LineXDimension.js\");\nobelisk.LineYDimension = __webpack_require__(/*! ./dimensions/LineYDimension */ \"./node_modules/obelisk.js/src/dimensions/LineYDimension.js\");\nobelisk.LineZDimension = __webpack_require__(/*! ./dimensions/LineZDimension */ \"./node_modules/obelisk.js/src/dimensions/LineZDimension.js\");\nobelisk.SideXDimension = __webpack_require__(/*! ./dimensions/SideXDimension */ \"./node_modules/obelisk.js/src/dimensions/SideXDimension.js\");\nobelisk.SideYDimension = __webpack_require__(/*! ./dimensions/SideYDimension */ \"./node_modules/obelisk.js/src/dimensions/SideYDimension.js\");\nobelisk.SlopeDimension = __webpack_require__(/*! ./dimensions/SlopeDimension */ \"./node_modules/obelisk.js/src/dimensions/SlopeDimension.js\");\n\nobelisk.LineColor = __webpack_require__(/*! ./colors/LineColor */ \"./node_modules/obelisk.js/src/colors/LineColor.js\");\nobelisk.CubeColor = __webpack_require__(/*! ./colors/CubeColor */ \"./node_modules/obelisk.js/src/colors/CubeColor.js\");\nobelisk.PyramidColor = __webpack_require__(/*! ./colors/PyramidColor */ \"./node_modules/obelisk.js/src/colors/PyramidColor.js\");\nobelisk.SideColor = __webpack_require__(/*! ./colors/SideColor */ \"./node_modules/obelisk.js/src/colors/SideColor.js\");\nobelisk.SlopeColor = __webpack_require__(/*! ./colors/SlopeColor */ \"./node_modules/obelisk.js/src/colors/SlopeColor.js\");\n\nwindow.obelisk = obelisk;\n\nmodule.exports = obelisk;\n\n\n\n//# sourceURL=webpack:///./node_modules/obelisk.js/src/obelisk.js?");

/***/ }),

/***/ "./node_modules/obelisk.js/src/primitives/AbstractPrimitive.js":
/*!*********************************************************************!*\
  !*** ./node_modules/obelisk.js/src/primitives/AbstractPrimitive.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/*jslint node: true*/\n\n\n\nvar AbstractPrimitive, p;\nAbstractPrimitive = function () {\n    this.initialize();\n};\np = AbstractPrimitive.prototype;\n\n// public properties\n/**\n * the canvas for drawImage to any canvas\n */\np.canvas = null;\n\n// protect properties\n/**\n * the width of the bitmap in 2d flash coordinate\n */\np.w = null;\n\n/**\n * the height of the bitmap in 2d flash coordinate\n */\np.h = null;\n\n/**\n * the dimension of primitive in 3d pixel coordinate\n */\np.dimension = null;\n\n/**\n * the color obj of the primitive\n */\np.color = null;\n\n/**\n * the border option of the primitive\n */\np.border = null;\n\n/**\n * the source bitmapdata contains pixel graphic\n */\np.bitmapData = null;\n\n/**\n * the preserve canvas option\n */\np.useDefaultCanvas = null;\n\n/**\n * the matrix offset between the bitmap and the 3d pixel coordinate ZERO point\n */\np.matrix = null;\n\n// constructor\np.initialize = function () {\n    return this;\n};\n\n// public methods\np.toString = function () {\n    return '[AbstractPrimitive]';\n};\n\nmodule.exports = AbstractPrimitive;\n\n\n//# sourceURL=webpack:///./node_modules/obelisk.js/src/primitives/AbstractPrimitive.js?");

/***/ }),

/***/ "./node_modules/obelisk.js/src/primitives/Brick.js":
/*!*********************************************************!*\
  !*** ./node_modules/obelisk.js/src/primitives/Brick.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/*jslint node: true*/\n\n\n\nvar BrickDimension = __webpack_require__(/*! ../dimensions/BrickDimension */ \"./node_modules/obelisk.js/src/dimensions/BrickDimension.js\");\nvar SideColor = __webpack_require__(/*! ../colors/SideColor */ \"./node_modules/obelisk.js/src/colors/SideColor.js\");\nvar Matrix = __webpack_require__(/*! ../geom/Matrix */ \"./node_modules/obelisk.js/src/geom/Matrix.js\");\nvar BitmapData = __webpack_require__(/*! ../display/BitmapData */ \"./node_modules/obelisk.js/src/display/BitmapData.js\");\nvar AbstractPrimitive = __webpack_require__(/*! ./AbstractPrimitive */ \"./node_modules/obelisk.js/src/primitives/AbstractPrimitive.js\");\n\nvar Brick, p;\nBrick = function (dimension, color, border, useDefaultCanvas) {\n    this.initialize(dimension, color, border, useDefaultCanvas);\n};\np = Brick.prototype = new AbstractPrimitive();\n\n// public properties\n\n// constructor\np.initialize = function (dimension, color, border, useDefaultCanvas) {\n    this.initRender(dimension, color, border, useDefaultCanvas);\n    this.initRectangle();\n    this.initBitmapData();\n    this.build();\n    this.renderBitmapDataForCanvas();\n\n    return this;\n};\n\n// private method\np.initRender = function (dimension, color, border, useDefaultCanvas) {\n    this.useDefaultCanvas = useDefaultCanvas || false;\n    this.border = border || border === undefined;\n    this.dimension = dimension === undefined ? new BrickDimension() : dimension;\n    this.color = color === undefined ? new SideColor() : color;\n};\n\np.initRectangle = function () {\n    this.w = this.dimension.xAxis + this.dimension.yAxis;\n    this.h = (this.dimension.xAxis + this.dimension.yAxis) / 2;\n\n    // 22.6 degrees implementation\n    this.w -= 2;\n    this.h -= 1;\n\n    // the matrix offset between the bitmap and the 3d pixel coordinate ZERO point\n    this.matrix = new Matrix();\n    this.matrix.tx = -this.dimension.yAxis + 2;\n    this.matrix.ty = 0;\n};\n\np.initBitmapData = function () {\n    this.bitmapData = new BitmapData(this.w, this.h, this.useDefaultCanvas);\n};\np.renderBitmapDataForCanvas = function () {\n    this.bitmapData.context.putImageData(this.bitmapData.imageData, 0, 0);\n    this.canvas = this.bitmapData.canvas;\n};\n\np.build = function () {\n    var xOffsetInner, yOffsetInner, xOffsetOut, yOffsetOut, i, j, borderColor;\n\n    xOffsetInner = this.dimension.yAxis - 2;\n    yOffsetInner = 0;\n    xOffsetOut = this.dimension.xAxis - 1;\n    yOffsetOut = this.h - 1;\n    borderColor = this.border ? this.color.border : this.color.inner;\n\n    //x axis\n    for (i = 0; i < this.dimension.xAxis; i += 1) {\n        this.bitmapData.setPixel(xOffsetInner + i, yOffsetInner + Math.floor(i / 2), borderColor);\n        this.bitmapData.setPixel(xOffsetOut - i, yOffsetOut - Math.floor(i / 2), borderColor);\n    }\n\n    //y axis\n    for (j = 0; j < this.dimension.yAxis; j += 1) {\n        this.bitmapData.setPixel(xOffsetInner + 1 - j, yOffsetInner + Math.floor(j / 2), borderColor);\n        this.bitmapData.setPixel(xOffsetOut - 1 + j, yOffsetOut - Math.floor(j / 2), borderColor);\n    }\n\n    //fill an pixel graphic enclosed\n    this.bitmapData.floodFill(Math.floor(this.w / 2), Math.floor(this.h / 2), this.color.inner);\n};\n\n// public methods\np.toString = function () {\n    return '[Brick]';\n};\n\nmodule.exports = Brick;\n\n\n//# sourceURL=webpack:///./node_modules/obelisk.js/src/primitives/Brick.js?");

/***/ }),

/***/ "./node_modules/obelisk.js/src/primitives/Cube.js":
/*!********************************************************!*\
  !*** ./node_modules/obelisk.js/src/primitives/Cube.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/*jslint node: true*/\n\n\n\nvar CubeDimension = __webpack_require__(/*! ../dimensions/CubeDimension */ \"./node_modules/obelisk.js/src/dimensions/CubeDimension.js\");\nvar BrickDimension = __webpack_require__(/*! ../dimensions/BrickDimension */ \"./node_modules/obelisk.js/src/dimensions/BrickDimension.js\");\nvar SideXDimension = __webpack_require__(/*! ../dimensions/SideXDimension */ \"./node_modules/obelisk.js/src/dimensions/SideXDimension.js\");\nvar SideYDimension = __webpack_require__(/*! ../dimensions/SideYDimension */ \"./node_modules/obelisk.js/src/dimensions/SideYDimension.js\");\nvar CubeColor = __webpack_require__(/*! ../colors/CubeColor */ \"./node_modules/obelisk.js/src/colors/CubeColor.js\");\nvar SideColor = __webpack_require__(/*! ../colors/SideColor */ \"./node_modules/obelisk.js/src/colors/SideColor.js\");\nvar Matrix = __webpack_require__(/*! ../geom/Matrix */ \"./node_modules/obelisk.js/src/geom/Matrix.js\");\nvar PixelObject = __webpack_require__(/*! ../display/PixelObject */ \"./node_modules/obelisk.js/src/display/PixelObject.js\");\nvar BitmapData = __webpack_require__(/*! ../display/BitmapData */ \"./node_modules/obelisk.js/src/display/BitmapData.js\");\nvar AbstractPrimitive = __webpack_require__(/*! ./AbstractPrimitive */ \"./node_modules/obelisk.js/src/primitives/AbstractPrimitive.js\");\nvar Brick = __webpack_require__(/*! ./Brick */ \"./node_modules/obelisk.js/src/primitives/Brick.js\");\nvar SideX = __webpack_require__(/*! ./SideX */ \"./node_modules/obelisk.js/src/primitives/SideX.js\");\nvar SideY = __webpack_require__(/*! ./SideY */ \"./node_modules/obelisk.js/src/primitives/SideY.js\");\n\nvar Cube, p;\nCube = function (dimension, color, border, useDefaultCanvas) {\n    this.initialize(dimension, color, border, useDefaultCanvas);\n};\np = Cube.prototype = new AbstractPrimitive();\n\n// public properties\n\n// constructor\np.initialize = function (dimension, color, border, useDefaultCanvas) {\n    this.initRender(dimension, color, border, useDefaultCanvas);\n    this.initRectangle();\n    this.initBitmapData();\n    this.build();\n    this.renderBitmapDataForCanvas();\n\n    return this;\n};\n\n// private method\np.initRender = function (dimension, color, border, useDefaultCanvas) {\n    this.useDefaultCanvas = useDefaultCanvas || false;\n    this.border = border || border === undefined;\n    this.dimension = dimension === undefined ? new CubeDimension() : dimension;\n    this.color = color === undefined ? new CubeColor() : color;\n};\n\np.initRectangle = function () {\n    this.w = this.dimension.xAxis + this.dimension.yAxis;\n    this.h = this.dimension.zAxis + (this.dimension.xAxis + this.dimension.yAxis) / 2;\n\n    // 22.6 degrees implementation\n    this.w -= 2;\n    this.h -= 1;\n\n    // the matrix offset between the bitmap and the 3d pixel coordinate ZERO point\n    this.matrix = new Matrix();\n    this.matrix.tx = -this.dimension.yAxis + 2;\n    this.matrix.ty = -this.dimension.zAxis;\n};\n\np.initBitmapData = function () {\n    this.bitmapData = new BitmapData(this.w, this.h, this.useDefaultCanvas);\n};\np.renderBitmapDataForCanvas = function () {\n    this.canvas = this.bitmapData.canvas;\n};\n\np.build = function () {\n    var brick, sideX, sideY, poBrick, poX, poY, ctx, bmd, offsetX, offsetY,\n        i, j, k;\n    // horizontal layer\n    brick = new Brick(\n        new BrickDimension(this.dimension.xAxis, this.dimension.yAxis),\n        new SideColor(this.color.border, this.color.horizontal),\n        this.border\n    );\n\n    // left side\n    sideX = new SideX(\n        new SideXDimension(this.dimension.xAxis, this.dimension.zAxis),\n        new SideColor(this.color.border, this.color.left),\n        this.border\n    );\n\n    // right side\n    sideY = new SideY(\n        new SideYDimension(this.dimension.yAxis, this.dimension.zAxis),\n        new SideColor(this.color.border, this.color.right),\n        this.border\n    );\n\n    poBrick = new PixelObject(brick);\n    poX = new PixelObject(sideX);\n    poY = new PixelObject(sideY);\n\n    ctx = this.bitmapData.context;\n    ctx.drawImage(poBrick.canvas, poBrick.x + this.dimension.yAxis - 2, poBrick.y);\n    ctx.drawImage(poX.canvas, poX.x, poX.y + this.dimension.zAxis + this.dimension.yAxis / 2 - 1);\n    ctx.drawImage(poY.canvas, poY.x + this.w - 2, poX.y + this.dimension.zAxis + this.dimension.xAxis / 2 - 1);\n\n    // highlight & highlight fix\n    bmd = new BitmapData(this.w, this.h);\n\n    if (this.border) {\n        offsetX = this.dimension.xAxis - 2;\n        offsetY = (this.dimension.xAxis + this.dimension.yAxis) / 2 - 2;\n\n        //the 2px in bounding without hightlight\n        for (i = 0; i < this.dimension.xAxis - 2; i += 1) {\n            bmd.setPixel(offsetX + 1 - i, offsetY - Math.floor(i / 2), this.color.borderHighlight);\n        }\n\n        //the 2px in bounding without hightlight\n        for (j = 0; j < this.dimension.yAxis - 2; j += 1) {\n            bmd.setPixel(offsetX + j, offsetY - Math.floor(j / 2), this.color.borderHighlight);\n        }\n\n        for (k = 0; k < this.dimension.zAxis; k += 1) {\n            bmd.setPixel(offsetX, offsetY + k, this.color.borderHighlight);\n        }\n    } else {\n        for (i = 0; i < this.dimension.zAxis; i += 1) {\n            bmd.setPixel(this.dimension.xAxis - 2, (this.dimension.xAxis + this.dimension.yAxis) / 2 - 1 + i, this.color.left);\n        }\n    }\n    bmd.context.putImageData(bmd.imageData, 0, 0);\n    ctx.drawImage(bmd.canvas, 0, 0);\n};\n\n// public methods\np.toString = function () {\n    return '[Cube]';\n};\n\nmodule.exports = Cube;\n\n\n//# sourceURL=webpack:///./node_modules/obelisk.js/src/primitives/Cube.js?");

/***/ }),

/***/ "./node_modules/obelisk.js/src/primitives/LineX.js":
/*!*********************************************************!*\
  !*** ./node_modules/obelisk.js/src/primitives/LineX.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/*jslint node: true*/\n\n\n\nvar LineXDimension = __webpack_require__(/*! ../dimensions/LineXDimension */ \"./node_modules/obelisk.js/src/dimensions/LineXDimension.js\");\nvar LineColor = __webpack_require__(/*! ../colors/LineColor */ \"./node_modules/obelisk.js/src/colors/LineColor.js\");\nvar Matrix = __webpack_require__(/*! ../geom/Matrix */ \"./node_modules/obelisk.js/src/geom/Matrix.js\");\nvar BitmapData = __webpack_require__(/*! ../display/BitmapData */ \"./node_modules/obelisk.js/src/display/BitmapData.js\");\nvar AbstractPrimitive = __webpack_require__(/*! ./AbstractPrimitive */ \"./node_modules/obelisk.js/src/primitives/AbstractPrimitive.js\");\n\nvar LineX, p;\nLineX = function (dimension, color, useDefaultCanvas) {\n    this.initialize(dimension, color, useDefaultCanvas);\n};\np = LineX.prototype = new AbstractPrimitive();\n\n// public properties\n\n// constructor\np.initialize = function (dimension, color, useDefaultCanvas) {\n    this.initRender(dimension, color, useDefaultCanvas);\n    this.initRectangle();\n    this.initBitmapData();\n    this.build();\n    this.renderBitmapDataForCanvas();\n\n    return this;\n};\n\n// private method\np.initRender = function (dimension, color, useDefaultCanvas) {\n    this.useDefaultCanvas = useDefaultCanvas || false;\n    this.dimension = dimension === undefined ? new LineXDimension() : dimension;\n    this.color = color === undefined ? new LineColor() : color;\n};\n\np.initRectangle = function () {\n    this.w = this.dimension.xAxis;\n    this.h = this.dimension.xAxis / 2;\n\n    // the matrix offset between the bitmap and the 3d pixel coordinate ZERO point\n    this.matrix = new Matrix();\n    this.matrix.tx = 0;\n    this.matrix.ty = 0;\n};\n\np.initBitmapData = function () {\n    this.bitmapData = new BitmapData(this.w, this.h, this.useDefaultCanvas);\n};\n\np.renderBitmapDataForCanvas = function () {\n    this.bitmapData.context.putImageData(this.bitmapData.imageData, 0, 0);\n    this.canvas = this.bitmapData.canvas;\n};\n\np.build = function () {\n    var xOffsetBorder, yOffsetBorder, i, borderColor;\n\n    xOffsetBorder = 0;\n    yOffsetBorder = 0;\n    borderColor = this.color.border;\n\n    //x axis\n    for (i = 0; i < this.dimension.xAxis; i += 1) {\n        this.bitmapData.setPixel(xOffsetBorder + i, yOffsetBorder + Math.floor(i / 2), borderColor);\n    }\n};\n\n// public methods\np.toString = function () {\n    return '[LineX]';\n};\n\nmodule.exports = LineX;\n\n\n//# sourceURL=webpack:///./node_modules/obelisk.js/src/primitives/LineX.js?");

/***/ }),

/***/ "./node_modules/obelisk.js/src/primitives/LineY.js":
/*!*********************************************************!*\
  !*** ./node_modules/obelisk.js/src/primitives/LineY.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/*jslint node: true*/\n\n\n\nvar LineYDimension = __webpack_require__(/*! ../dimensions/LineYDimension */ \"./node_modules/obelisk.js/src/dimensions/LineYDimension.js\");\nvar LineColor = __webpack_require__(/*! ../colors/LineColor */ \"./node_modules/obelisk.js/src/colors/LineColor.js\");\nvar Matrix = __webpack_require__(/*! ../geom/Matrix */ \"./node_modules/obelisk.js/src/geom/Matrix.js\");\nvar BitmapData = __webpack_require__(/*! ../display/BitmapData */ \"./node_modules/obelisk.js/src/display/BitmapData.js\");\nvar AbstractPrimitive = __webpack_require__(/*! ./AbstractPrimitive */ \"./node_modules/obelisk.js/src/primitives/AbstractPrimitive.js\");\n\nvar LineY, p;\nLineY = function (dimension, color, useDefaultCanvas) {\n    this.initialize(dimension, color, useDefaultCanvas);\n};\np = LineY.prototype = new AbstractPrimitive();\n\n// public properties\n\n// constructor\np.initialize = function (dimension, color, useDefaultCanvas) {\n    this.initRender(dimension, color, useDefaultCanvas);\n    this.initRectangle();\n    this.initBitmapData();\n    this.build();\n    this.renderBitmapDataForCanvas();\n\n    return this;\n};\n\n// private method\np.initRender = function (dimension, color, useDefaultCanvas) {\n    this.useDefaultCanvas = useDefaultCanvas || false;\n    this.dimension = dimension === undefined ? new LineYDimension() : dimension;\n    this.color = color === undefined ? new LineColor() : color;\n};\n\np.initRectangle = function () {\n    this.w = this.dimension.yAxis;\n    this.h = this.dimension.yAxis / 2;\n\n    // the matrix offset between the bitmap and the 3d pixel coordinate ZERO point\n    this.matrix = new Matrix();\n    this.matrix.tx = -this.dimension.yAxis + 2;\n    this.matrix.ty = 0;\n};\n\np.initBitmapData = function () {\n    this.bitmapData = new BitmapData(this.w, this.h, this.useDefaultCanvas);\n};\n\np.renderBitmapDataForCanvas = function () {\n    this.bitmapData.context.putImageData(this.bitmapData.imageData, 0, 0);\n    this.canvas = this.bitmapData.canvas;\n};\n\np.build = function () {\n    var xOffsetBorder, yOffsetBorder, i, borderColor;\n\n    xOffsetBorder = this.dimension.yAxis - 1;\n    yOffsetBorder = 0;\n    borderColor = this.color.border;\n\n    //y axis\n    for (i = 0; i < this.dimension.yAxis; i += 1) {\n        console.log(i);\n        this.bitmapData.setPixel(xOffsetBorder - i, yOffsetBorder + Math.floor(i / 2), borderColor);\n    }\n};\n\n// public methods\np.toString = function () {\n    return '[LineY]';\n};\n\nmodule.exports = LineY;\n\n\n//# sourceURL=webpack:///./node_modules/obelisk.js/src/primitives/LineY.js?");

/***/ }),

/***/ "./node_modules/obelisk.js/src/primitives/LineZ.js":
/*!*********************************************************!*\
  !*** ./node_modules/obelisk.js/src/primitives/LineZ.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/*jslint node: true*/\n\n\n\nvar LineZDimension = __webpack_require__(/*! ../dimensions/LineZDimension */ \"./node_modules/obelisk.js/src/dimensions/LineZDimension.js\");\nvar LineColor = __webpack_require__(/*! ../colors/LineColor */ \"./node_modules/obelisk.js/src/colors/LineColor.js\");\nvar Matrix = __webpack_require__(/*! ../geom/Matrix */ \"./node_modules/obelisk.js/src/geom/Matrix.js\");\nvar BitmapData = __webpack_require__(/*! ../display/BitmapData */ \"./node_modules/obelisk.js/src/display/BitmapData.js\");\nvar AbstractPrimitive = __webpack_require__(/*! ./AbstractPrimitive */ \"./node_modules/obelisk.js/src/primitives/AbstractPrimitive.js\");\n\nvar LineZ, p;\nLineZ = function (dimension, color, useDefaultCanvas) {\n    this.initialize(dimension, color, useDefaultCanvas);\n};\np = LineZ.prototype = new AbstractPrimitive();\n\n// public properties\n\n// constructor\np.initialize = function (dimension, color, useDefaultCanvas) {\n    this.initRender(dimension, color, useDefaultCanvas);\n    this.initRectangle();\n    this.initBitmapData();\n    this.build();\n    this.renderBitmapDataForCanvas();\n\n    return this;\n};\n\n// private method\np.initRender = function (dimension, color, useDefaultCanvas) {\n    this.useDefaultCanvas = useDefaultCanvas || false;\n    this.dimension = dimension === undefined ? new LineZDimension() : dimension;\n    this.color = color === undefined ? new LineColor() : color;\n};\n\np.initRectangle = function () {\n    this.w = 1;\n    this.h = this.dimension.zAxis;\n\n    // the matrix offset between the bitmap and the 3d pixel coordinate ZERO point\n    this.matrix = new Matrix();\n    this.matrix.tx = 0;\n    this.matrix.ty = -this.dimension.zAxis + 1;\n};\n\np.initBitmapData = function () {\n    this.bitmapData = new BitmapData(this.w, this.h, this.useDefaultCanvas);\n};\n\np.renderBitmapDataForCanvas = function () {\n    this.bitmapData.context.putImageData(this.bitmapData.imageData, 0, 0);\n    this.canvas = this.bitmapData.canvas;\n};\n\np.build = function () {\n    var xOffsetBorder, yOffsetBorder, i, borderColor;\n\n    xOffsetBorder = 0;\n    yOffsetBorder = 0;\n    borderColor = this.color.border;\n\n    //y axis\n    for (i = 0; i < this.dimension.zAxis; i += 1) {\n        this.bitmapData.setPixel(xOffsetBorder, yOffsetBorder + i, borderColor);\n    }\n};\n\n// public methods\np.toString = function () {\n    return '[LineZ]';\n};\n\nmodule.exports = LineZ;\n\n\n//# sourceURL=webpack:///./node_modules/obelisk.js/src/primitives/LineZ.js?");

/***/ }),

/***/ "./node_modules/obelisk.js/src/primitives/Pyramid.js":
/*!***********************************************************!*\
  !*** ./node_modules/obelisk.js/src/primitives/Pyramid.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/*jslint node: true*/\n\n\n\nvar PyramidDimension = __webpack_require__(/*! ../dimensions/PyramidDimension */ \"./node_modules/obelisk.js/src/dimensions/PyramidDimension.js\");\nvar PyramidColor = __webpack_require__(/*! ../colors/PyramidColor */ \"./node_modules/obelisk.js/src/colors/PyramidColor.js\");\nvar Matrix = __webpack_require__(/*! ../geom/Matrix */ \"./node_modules/obelisk.js/src/geom/Matrix.js\");\nvar BitmapData = __webpack_require__(/*! ../display/BitmapData */ \"./node_modules/obelisk.js/src/display/BitmapData.js\");\nvar AbstractPrimitive = __webpack_require__(/*! ./AbstractPrimitive */ \"./node_modules/obelisk.js/src/primitives/AbstractPrimitive.js\");\n\nvar Pyramid, p;\nPyramid = function (dimension, color, border, useDefaultCanvas) {\n    this.initialize(dimension, color, border, useDefaultCanvas);\n};\np = Pyramid.prototype = new AbstractPrimitive();\n\n// private properties\np.hSize = null;\np.hOffset = null;\n\n// constructor\np.initialize = function (dimension, color, border, useDefaultCanvas) {\n    this.initRender(dimension, color, border, useDefaultCanvas);\n    this.initRectangle();\n    this.initBitmapData();\n    this.build();\n    this.renderBitmapDataForCanvas();\n\n    return this;\n};\n\n// private method\np.initRender = function (dimension, color, border, useDefaultCanvas) {\n    this.useDefaultCanvas = useDefaultCanvas || false;\n    this.border = border || border === undefined;\n    this.dimension = dimension === undefined ? new PyramidDimension() : dimension;\n    this.color = color === undefined ? new PyramidColor() : color;\n\n    this.hSize = this.dimension.tall ? this.dimension.xAxis * 2 : this.dimension.xAxis;\n    this.hOffset = this.dimension.tall ? -3 : -2;\n};\n\np.initRectangle = function () {\n    this.w = this.dimension.xAxis + this.dimension.yAxis;\n    this.h = this.hSize + this.dimension.xAxis / 2;\n\n    // 22.6 degrees implementation\n    this.w -= 2;\n    this.h += this.hOffset;\n\n    // the matrix offset between the bitmap and the 3d pixel coordinate ZERO point\n    this.matrix = new Matrix();\n    this.matrix.tx = -this.dimension.xAxis + 2;\n    this.matrix.ty = -this.hSize / 2 + 2 - (this.dimension.tall ? this.dimension.xAxis / 2 : 1);\n};\n\np.initBitmapData = function () {\n    this.bitmapData = new BitmapData(this.w, this.h, this.useDefaultCanvas);\n};\np.renderBitmapDataForCanvas = function () {\n    this.bitmapData.context.putImageData(this.bitmapData.imageData, 0, 0);\n    this.canvas = this.bitmapData.canvas;\n};\n\np.build = function () {\n    var colorBorderLeft, colorBorderRight, colorBorderHighlight,\n        i, j, k, l1, m1, l2, m2;\n\n    colorBorderLeft = this.border ? this.color.border : this.color.left;\n    colorBorderRight = this.border ? this.color.border : this.color.right;\n\n    colorBorderHighlight = this.border ? this.color.borderHighlight : colorBorderLeft;\n\n    //z axis || hightlight\n    for (k = 0; k < this.hSize + this.dimension.xAxis / 2 - 4; k += 1) {\n        this.bitmapData.setPixel(this.dimension.xAxis - 2, k + 3 + this.hOffset, colorBorderHighlight);\n    }\n\n    //x axis\n    for (i = 0; i < this.dimension.xAxis; i += 1) {\n        this.bitmapData.setPixel(i, this.hSize + Math.floor(i / 2) + this.hOffset, colorBorderLeft);\n    }\n\n    //y axis\n    for (j = 0; j < this.dimension.xAxis; j += 1) {\n        this.bitmapData.setPixel(j + this.dimension.xAxis - 2, this.hSize + this.dimension.xAxis / 2 - Math.floor(j / 2) - 1 + this.hOffset, colorBorderRight);\n    }\n\n    if (!this.dimension.tall) {\n        //left edge\n        for (l1 = 0; l1 < this.hSize; l1 += 1) {\n            this.bitmapData.setPixel(l1, this.hSize - l1 + this.hOffset, colorBorderLeft);\n        }\n\n        //right edge\n        for (m1 = 0; m1 < this.hSize; m1 += 1) {\n            this.bitmapData.setPixel(m1 + this.hSize - 2, m1 + 1 + this.hOffset, colorBorderRight);\n        }\n    } else {\n        //left edge\n        for (l2 = 0; l2 < this.hSize - 2; l2 += 1) {\n            this.bitmapData.setPixel(Math.floor(l2 / 2), this.hSize - l2 + this.hOffset, colorBorderLeft);\n        }\n\n        //right edge\n        for (m2 = 2; m2 < this.hSize; m2 += 1) {\n            this.bitmapData.setPixel(Math.floor(m2 / 2) + this.dimension.xAxis - 2, m2 + 1 + this.hOffset, colorBorderRight);\n        }\n    }\n\n    if (!this.border) {\n        this.bitmapData.setPixel(this.dimension.xAxis - 2, this.hSize + this.dimension.xAxis / 2 - 1 + this.hOffset, colorBorderLeft);\n    }\n\n    //floodfill\n    this.bitmapData.floodFill(this.dimension.xAxis - 1, this.hSize + Math.floor((this.dimension.xAxis - 1) / 2) + this.hOffset - 1, this.color.right);\n    this.bitmapData.floodFill(this.dimension.xAxis - 3, this.hSize + Math.floor((this.dimension.xAxis - 1) / 2) + this.hOffset - 2, this.color.left);\n};\n\n// public methods\np.toString = function () {\n    return '[Pyramid]';\n};\n\nmodule.exports = Pyramid;\n\n\n//# sourceURL=webpack:///./node_modules/obelisk.js/src/primitives/Pyramid.js?");

/***/ }),

/***/ "./node_modules/obelisk.js/src/primitives/SideX.js":
/*!*********************************************************!*\
  !*** ./node_modules/obelisk.js/src/primitives/SideX.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/*jslint node: true*/\n\n\n\nvar SideXDimension = __webpack_require__(/*! ../dimensions/SideXDimension */ \"./node_modules/obelisk.js/src/dimensions/SideXDimension.js\");\nvar SideColor = __webpack_require__(/*! ../colors/SideColor */ \"./node_modules/obelisk.js/src/colors/SideColor.js\");\nvar Matrix = __webpack_require__(/*! ../geom/Matrix */ \"./node_modules/obelisk.js/src/geom/Matrix.js\");\nvar BitmapData = __webpack_require__(/*! ../display/BitmapData */ \"./node_modules/obelisk.js/src/display/BitmapData.js\");\nvar AbstractPrimitive = __webpack_require__(/*! ./AbstractPrimitive */ \"./node_modules/obelisk.js/src/primitives/AbstractPrimitive.js\");\n\nvar SideX, p;\nSideX = function (dimension, color, border, useDefaultCanvas) {\n    this.initialize(dimension, color, border, useDefaultCanvas);\n};\np = SideX.prototype = new AbstractPrimitive();\n\n// public properties\n\n// constructor\np.initialize = function (dimension, color, border, useDefaultCanvas) {\n    this.initRender(dimension, color, border, useDefaultCanvas);\n    this.initRectangle();\n    this.initBitmapData();\n    this.build();\n    this.renderBitmapDataForCanvas();\n\n    return this;\n};\n\n// private method\np.initRender = function (dimension, color, border, useDefaultCanvas) {\n    this.useDefaultCanvas = useDefaultCanvas || false;\n    this.border = border || border === undefined;\n    this.dimension = dimension === undefined ? new SideXDimension() : dimension;\n    this.color = color === undefined ? new SideColor() : color;\n};\n\np.initRectangle = function () {\n    this.w = this.dimension.xAxis;\n    this.h = this.dimension.zAxis + this.dimension.xAxis / 2;\n\n    // the matrix offset between the bitmap and the 3d pixel coordinate ZERO point\n    this.matrix = new Matrix();\n    this.matrix.tx = 0;\n    this.matrix.ty = -this.dimension.zAxis;\n};\n\np.initBitmapData = function () {\n    this.bitmapData = new BitmapData(this.w, this.h, this.useDefaultCanvas);\n};\np.renderBitmapDataForCanvas = function () {\n    this.bitmapData.context.putImageData(this.bitmapData.imageData, 0, 0);\n    this.canvas = this.bitmapData.canvas;\n};\n\np.build = function () {\n    var xOffsetInner, yOffsetInner, xOffsetOut, yOffsetOut, i, j, borderColor;\n\n    xOffsetInner = 0;\n    yOffsetInner = this.dimension.zAxis;\n    xOffsetOut = this.dimension.xAxis - 1;\n    yOffsetOut = this.h - this.dimension.zAxis - 1;\n    borderColor = this.border ? this.color.border : this.color.inner;\n\n    //x axis\n    for (i = 0; i < this.dimension.xAxis; i += 1) {\n        this.bitmapData.setPixel(xOffsetInner + i, yOffsetInner + Math.floor(i / 2), borderColor);\n        this.bitmapData.setPixel(xOffsetOut - i, yOffsetOut - Math.floor(i / 2), borderColor);\n    }\n\n    //z axis\n    for (j = 0; j < this.dimension.zAxis; j += 1) {\n        this.bitmapData.setPixel(xOffsetInner, yOffsetInner - j, borderColor);\n        this.bitmapData.setPixel(xOffsetOut, yOffsetOut + j, borderColor);\n    }\n\n    //fill an pixel graphic enclosed\n    this.bitmapData.floodFill(Math.floor(this.w / 2), Math.floor(this.h / 2), this.color.inner);\n};\n\n// public methods\np.toString = function () {\n    return '[SideX]';\n};\n\nmodule.exports = SideX;\n\n\n//# sourceURL=webpack:///./node_modules/obelisk.js/src/primitives/SideX.js?");

/***/ }),

/***/ "./node_modules/obelisk.js/src/primitives/SideY.js":
/*!*********************************************************!*\
  !*** ./node_modules/obelisk.js/src/primitives/SideY.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/*jslint node: true*/\n\n\n\nvar SideYDimension = __webpack_require__(/*! ../dimensions/SideYDimension */ \"./node_modules/obelisk.js/src/dimensions/SideYDimension.js\");\nvar SideColor = __webpack_require__(/*! ../colors/SideColor */ \"./node_modules/obelisk.js/src/colors/SideColor.js\");\nvar Matrix = __webpack_require__(/*! ../geom/Matrix */ \"./node_modules/obelisk.js/src/geom/Matrix.js\");\nvar BitmapData = __webpack_require__(/*! ../display/BitmapData */ \"./node_modules/obelisk.js/src/display/BitmapData.js\");\nvar AbstractPrimitive = __webpack_require__(/*! ./AbstractPrimitive */ \"./node_modules/obelisk.js/src/primitives/AbstractPrimitive.js\");\n\nvar SideY, p;\nSideY = function (dimension, color, border, useDefaultCanvas) {\n    this.initialize(dimension, color, border, useDefaultCanvas);\n};\np = SideY.prototype = new AbstractPrimitive();\n\n// public properties\n\n// constructor\np.initialize = function (dimension, color, border, useDefaultCanvas) {\n    this.initRender(dimension, color, border, useDefaultCanvas);\n    this.initRectangle();\n    this.initBitmapData();\n    this.build();\n    this.renderBitmapDataForCanvas();\n\n    return this;\n};\n\n// private method\np.initRender = function (dimension, color, border, useDefaultCanvas) {\n    this.useDefaultCanvas = useDefaultCanvas || false;\n    this.border = border || border === undefined;\n    this.dimension = dimension === undefined ? new SideYDimension() : dimension;\n    this.color = color === undefined ? new SideColor() : color;\n};\n\np.initRectangle = function () {\n    this.w = this.dimension.yAxis;\n    this.h = this.dimension.zAxis + this.dimension.yAxis / 2;\n\n    // the matrix offset between the bitmap and the 3d pixel coordinate ZERO point\n    this.matrix = new Matrix();\n    this.matrix.tx = -this.dimension.yAxis + 2;\n    this.matrix.ty = -this.dimension.zAxis;\n};\n\np.initBitmapData = function () {\n    this.bitmapData = new BitmapData(this.w, this.h, this.useDefaultCanvas);\n};\np.renderBitmapDataForCanvas = function () {\n    this.bitmapData.context.putImageData(this.bitmapData.imageData, 0, 0);\n    this.canvas = this.bitmapData.canvas;\n};\n\np.build = function () {\n    var xOffsetInner, yOffsetInner, xOffsetOut, yOffsetOut, i, j, borderColor;\n\n    xOffsetInner = 0;\n    yOffsetInner = this.h - this.dimension.zAxis - 1;\n    xOffsetOut = this.dimension.yAxis - 1;\n    yOffsetOut = this.dimension.zAxis;\n    borderColor = this.border ? this.color.border : this.color.inner;\n\n    //y axis\n    for (i = 0; i < this.dimension.yAxis; i += 1) {\n        this.bitmapData.setPixel(xOffsetInner + i, yOffsetInner - Math.floor(i / 2), borderColor);\n        this.bitmapData.setPixel(xOffsetOut - i, yOffsetOut + Math.floor(i / 2), borderColor);\n    }\n\n    //z axis\n    for (j = 0; j < this.dimension.zAxis; j += 1) {\n        this.bitmapData.setPixel(xOffsetInner, yOffsetInner + j, borderColor);\n        this.bitmapData.setPixel(xOffsetOut, yOffsetOut - j, borderColor);\n    }\n\n    //fill an pixel graphic enclosed\n    this.bitmapData.floodFill(Math.floor(this.w / 2), Math.floor(this.h / 2), this.color.inner);\n};\n\n// public methods\np.toString = function () {\n    return '[SideY]';\n};\n\nmodule.exports = SideY;\n\n\n//# sourceURL=webpack:///./node_modules/obelisk.js/src/primitives/SideY.js?");

/***/ }),

/***/ "./node_modules/obelisk.js/src/primitives/SlopeEast.js":
/*!*************************************************************!*\
  !*** ./node_modules/obelisk.js/src/primitives/SlopeEast.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/*jslint node: true*/\n\n\n\nvar SlopeDimension = __webpack_require__(/*! ../dimensions/SlopeDimension */ \"./node_modules/obelisk.js/src/dimensions/SlopeDimension.js\");\nvar SlopeColor = __webpack_require__(/*! ../colors/SlopeColor */ \"./node_modules/obelisk.js/src/colors/SlopeColor.js\");\nvar Matrix = __webpack_require__(/*! ../geom/Matrix */ \"./node_modules/obelisk.js/src/geom/Matrix.js\");\nvar BitmapData = __webpack_require__(/*! ../display/BitmapData */ \"./node_modules/obelisk.js/src/display/BitmapData.js\");\nvar AbstractPrimitive = __webpack_require__(/*! ./AbstractPrimitive */ \"./node_modules/obelisk.js/src/primitives/AbstractPrimitive.js\");\n\nvar SlopeEast, p;\nSlopeEast = function (dimension, color, border, useDefaultCanvas) {\n    this.initialize(dimension, color, border, useDefaultCanvas);\n};\np = SlopeEast.prototype = new AbstractPrimitive();\n\n// constructor\np.initialize = function (dimension, color, border, useDefaultCanvas) {\n    this.initRender(dimension, color, border, useDefaultCanvas);\n    this.initRectangle();\n    this.initBitmapData();\n    this.build();\n    this.renderBitmapDataForCanvas();\n\n    return this;\n};\n\n// private method\np.initRender = function (dimension, color, border, useDefaultCanvas) {\n    this.useDefaultCanvas = useDefaultCanvas || false;\n    this.border = border || border === undefined;\n    this.dimension = dimension === undefined ? new SlopeDimension() : dimension;\n    this.color = color === undefined ? new SlopeColor() : color;\n};\n\np.initRectangle = function () {\n    this.w = this.dimension.xAxis + this.dimension.yAxis;\n    this.h = this.dimension.xAxis * 2 + this.dimension.yAxis / 2;\n\n    // 22.6 degrees implementation\n    this.w -= 2;\n    this.h -= 3;\n\n    // the matrix offset between the bitmap and the 3d pixel coordinate ZERO point\n    this.matrix = new Matrix();\n    this.matrix.tx = -(this.dimension.yAxis - 2);\n    this.matrix.ty = -(this.dimension.xAxis * 3 / 2 - 2);\n};\n\np.initBitmapData = function () {\n    this.bitmapData = new BitmapData(this.w, this.h, this.useDefaultCanvas);\n};\np.renderBitmapDataForCanvas = function () {\n    this.bitmapData.context.putImageData(this.bitmapData.imageData, 0, 0);\n    this.canvas = this.bitmapData.canvas;\n};\n\np.build = function () {\n    var colorBorderLeft, colorBorderRight,\n        i, j, k, m, n;\n\n    colorBorderLeft = this.border ? this.color.border : this.color.left;\n    colorBorderRight = this.border ? this.color.border : this.color.rightSlope;\n\n    // y axis\n    for (j = 0; j < this.dimension.yAxis; j += 1) {\n        this.bitmapData.setPixel(j, this.dimension.yAxis / 2 - Math.floor(j / 2) - 1, colorBorderRight);\n        this.bitmapData.setPixel(j + this.dimension.xAxis - 2, this.h - Math.floor(j / 2) - 1, colorBorderRight);\n    }\n\n    // x axis\n    for (i = 0; i < this.dimension.xAxis; i += 1) {\n        this.bitmapData.setPixel(i, this.h - this.dimension.xAxis / 2 + Math.floor(i / 2), colorBorderLeft);\n    }\n\n    // z axis\n    for (k = this.dimension.yAxis / 2 - 1; k < this.h - this.dimension.xAxis / 2; k += 1) {\n        this.bitmapData.setPixel(0, k, colorBorderLeft);\n    }\n\n    // slot\n    for (m = 0; m < this.dimension.xAxis * 2 - 2; m += 1) {\n        this.bitmapData.setPixel(this.dimension.yAxis - 1 + Math.floor(m / 2), m, colorBorderRight);\n        this.bitmapData.setPixel(1 + Math.floor(m / 2), this.dimension.yAxis / 2 + m - 1, colorBorderRight);\n    }\n\n    // flood fill\n    this.bitmapData.floodFill(this.dimension.yAxis - 2, 1, this.color.rightSlope);\n    this.bitmapData.floodFill(this.dimension.xAxis - 3, this.h - 3, this.color.left);\n    // hack single pixel\n    this.bitmapData.setPixel(this.dimension.xAxis - 2, this.h - 2, this.color.left);\n\n    // highlight\n    if (this.border) {\n        for (n = 1; n < this.dimension.xAxis * 2 - 3; n += 1) {\n            this.bitmapData.setPixel(1 + Math.floor(n / 2), this.dimension.yAxis / 2 + n - 1, this.color.borderHighlight);\n        }\n    }\n};\n\n// public methods\np.toString = function () {\n    return '[SlopeEast]';\n};\n\nmodule.exports = SlopeEast;\n\n\n//# sourceURL=webpack:///./node_modules/obelisk.js/src/primitives/SlopeEast.js?");

/***/ }),

/***/ "./node_modules/obelisk.js/src/primitives/SlopeNorth.js":
/*!**************************************************************!*\
  !*** ./node_modules/obelisk.js/src/primitives/SlopeNorth.js ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/*jslint node: true*/\n\n\n\nvar SlopeDimension = __webpack_require__(/*! ../dimensions/SlopeDimension */ \"./node_modules/obelisk.js/src/dimensions/SlopeDimension.js\");\nvar SlopeColor = __webpack_require__(/*! ../colors/SlopeColor */ \"./node_modules/obelisk.js/src/colors/SlopeColor.js\");\nvar Matrix = __webpack_require__(/*! ../geom/Matrix */ \"./node_modules/obelisk.js/src/geom/Matrix.js\");\nvar BitmapData = __webpack_require__(/*! ../display/BitmapData */ \"./node_modules/obelisk.js/src/display/BitmapData.js\");\nvar AbstractPrimitive = __webpack_require__(/*! ./AbstractPrimitive */ \"./node_modules/obelisk.js/src/primitives/AbstractPrimitive.js\");\nvar SideX = __webpack_require__(/*! ./SideX */ \"./node_modules/obelisk.js/src/primitives/SideX.js\");\nvar SideXDimension = __webpack_require__(/*! ../dimensions/SideXDimension */ \"./node_modules/obelisk.js/src/dimensions/SideXDimension.js\");\nvar SideColor = __webpack_require__(/*! ../colors/SideColor */ \"./node_modules/obelisk.js/src/colors/SideColor.js\");\nvar PixelObject = __webpack_require__(/*! ../display/PixelObject */ \"./node_modules/obelisk.js/src/display/PixelObject.js\");\n\nvar SlopeNorth, p;\nSlopeNorth = function (dimension, color, border, useDefaultCanvas) {\n    this.initialize(dimension, color, border, useDefaultCanvas);\n};\np = SlopeNorth.prototype = new AbstractPrimitive();\n\n// constructor\np.initialize = function (dimension, color, border, useDefaultCanvas) {\n    this.initRender(dimension, color, border, useDefaultCanvas);\n    this.initRectangle();\n    this.initBitmapData();\n    this.build();\n    this.renderBitmapDataForCanvas();\n\n    return this;\n};\n\n// private method\np.initRender = function (dimension, color, border, useDefaultCanvas) {\n    this.useDefaultCanvas = useDefaultCanvas || false;\n    this.border = border || border === undefined;\n    this.dimension = dimension === undefined ? new SlopeDimension() : dimension;\n    this.color = color === undefined ? new SlopeColor() : color;\n};\n\np.initRectangle = function () {\n    this.w = this.dimension.xAxis + this.dimension.yAxis;\n    this.h = this.dimension.yAxis * 3 / 2 + this.dimension.xAxis / 2;\n\n    // 22.6 degrees implementation\n    this.w -= 2;\n    this.h -= 3;\n\n    // the matrix offset between the bitmap and the 3d pixel coordinate ZERO point\n    this.matrix = new Matrix();\n    this.matrix.tx = -(this.dimension.yAxis - 2);\n    this.matrix.ty = -(this.dimension.yAxis - 2);\n};\n\np.initBitmapData = function () {\n    this.bitmapData = new BitmapData(this.w, this.h, this.useDefaultCanvas);\n};\np.renderBitmapDataForCanvas = function () {\n    this.canvas = this.bitmapData.canvas;\n};\n\np.build = function () {\n    var colorBorderLeft, colorBorderRight, colorBorderHighlight,\n        sideX, poX, ctx, bmd,\n        i, j, n;\n\n    colorBorderLeft = this.border ? this.color.border : this.color.left;\n    colorBorderRight = this.border ? this.color.border : this.color.right;\n    colorBorderHighlight = this.border ? this.color.borderHighlight : this.color.left;\n\n    sideX = new SideX(\n        new SideXDimension(this.dimension.xAxis, this.h - this.dimension.xAxis / 2),\n        new SideColor(colorBorderLeft, this.color.left)\n    );\n\n    poX = new PixelObject(sideX);\n\n    ctx = this.bitmapData.context;\n    ctx.drawImage(poX.canvas, poX.x, poX.y + this.h - this.dimension.xAxis / 2);\n\n    bmd = new BitmapData(this.w, this.h);\n\n    // close the path for floodfill\n    for (i = this.h - this.dimension.yAxis * 3 / 2 + 2; i < this.h; i += 1) {\n        bmd.setPixel(this.dimension.xAxis - 1, i, colorBorderRight);\n    }\n\n    // y axis\n    for (j = 1; j < this.dimension.yAxis; j += 1) {\n        bmd.setPixel(this.dimension.xAxis + j - 2, this.h - Math.floor(j / 2) - 1, colorBorderRight);\n        bmd.setPixel(this.dimension.xAxis + j - 2, this.dimension.xAxis / 2 - 2 + j, colorBorderRight);\n    }\n\n    // flood fill\n    bmd.floodFill(this.dimension.xAxis + 1, this.h - 3, this.color.right);\n\n    //highlight\n    for (n = this.dimension.xAxis / 2; n < this.h - 1; n += 1) {\n        bmd.setPixel(this.dimension.xAxis - 1, n, this.color.right);\n        bmd.setPixel(this.dimension.xAxis - 2, n, colorBorderHighlight);\n    }\n\n    bmd.context.putImageData(bmd.imageData, 0, 0);\n    ctx.drawImage(bmd.canvas, 0, 0);\n};\n\n// public methods\np.toString = function () {\n    return '[SlopeNorth]';\n};\n\nmodule.exports = SlopeNorth;\n\n\n//# sourceURL=webpack:///./node_modules/obelisk.js/src/primitives/SlopeNorth.js?");

/***/ }),

/***/ "./node_modules/obelisk.js/src/primitives/SlopeSouth.js":
/*!**************************************************************!*\
  !*** ./node_modules/obelisk.js/src/primitives/SlopeSouth.js ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/*jslint node: true*/\n\n\n\nvar SlopeDimension = __webpack_require__(/*! ../dimensions/SlopeDimension */ \"./node_modules/obelisk.js/src/dimensions/SlopeDimension.js\");\nvar SlopeColor = __webpack_require__(/*! ../colors/SlopeColor */ \"./node_modules/obelisk.js/src/colors/SlopeColor.js\");\nvar Matrix = __webpack_require__(/*! ../geom/Matrix */ \"./node_modules/obelisk.js/src/geom/Matrix.js\");\nvar BitmapData = __webpack_require__(/*! ../display/BitmapData */ \"./node_modules/obelisk.js/src/display/BitmapData.js\");\nvar AbstractPrimitive = __webpack_require__(/*! ./AbstractPrimitive */ \"./node_modules/obelisk.js/src/primitives/AbstractPrimitive.js\");\n\nvar SlopeSouth, p;\nSlopeSouth = function (dimension, color, border, useDefaultCanvas) {\n    this.initialize(dimension, color, border, useDefaultCanvas);\n};\np = SlopeSouth.prototype = new AbstractPrimitive();\n\n// constructor\np.initialize = function (dimension, color, border, useDefaultCanvas) {\n    this.initRender(dimension, color, border, useDefaultCanvas);\n    this.initRectangle();\n    this.initBitmapData();\n    this.build();\n    this.renderBitmapDataForCanvas();\n\n    return this;\n};\n\n// private method\np.initRender = function (dimension, color, border, useDefaultCanvas) {\n    this.useDefaultCanvas = useDefaultCanvas || false;\n    this.border = border || border === undefined;\n    this.dimension = dimension === undefined ? new SlopeDimension() : dimension;\n    this.color = color === undefined ? new SlopeColor() : color;\n};\n\np.initRectangle = function () {\n    this.w = this.dimension.xAxis + this.dimension.yAxis;\n    this.h = this.dimension.xAxis / 2 + this.dimension.yAxis * 2;\n\n    // 22.6 degrees implementation\n    this.w -= 2;\n    this.h -= 3;\n\n    // the matrix offset between the bitmap and the 3d pixel coordinate ZERO point\n    this.matrix = new Matrix();\n    this.matrix.tx = -(this.dimension.yAxis - 2);\n    this.matrix.ty = -(this.dimension.yAxis * 3 / 2 - 2);\n};\n\np.initBitmapData = function () {\n    this.bitmapData = new BitmapData(this.w, this.h, this.useDefaultCanvas);\n};\np.renderBitmapDataForCanvas = function () {\n    this.bitmapData.context.putImageData(this.bitmapData.imageData, 0, 0);\n    this.canvas = this.bitmapData.canvas;\n};\n\np.build = function () {\n    var colorBorderLeft, colorBorderRight,\n        i, j, k, m, n;\n\n    colorBorderLeft = this.border ? this.color.border : this.color.leftSlope;\n    colorBorderRight = this.border ? this.color.border : this.color.right;\n\n    // x axis\n    for (j = 0; j < this.dimension.xAxis; j += 1) {\n        this.bitmapData.setPixel(j, this.dimension.yAxis * 2 + Math.floor(j / 2) - 3, colorBorderLeft);\n        this.bitmapData.setPixel(j + this.dimension.yAxis - 2, Math.floor(j / 2), colorBorderLeft);\n    }\n\n    // y axis\n    for (i = 0; i < this.dimension.yAxis; i += 1) {\n        this.bitmapData.setPixel(this.dimension.xAxis - 2 + i, this.h - Math.floor(i / 2) - 1, colorBorderRight);\n    }\n\n    // z axis\n    for (k = this.dimension.xAxis / 2 - 1; k < this.h - this.dimension.yAxis / 2; k += 1) {\n        this.bitmapData.setPixel(this.w - 1, k, colorBorderRight);\n    }\n\n    // slot\n    for (m = 0; m < this.dimension.yAxis * 2 - 2; m += 1) {\n        this.bitmapData.setPixel(Math.floor(m / 2), this.dimension.yAxis * 2 - m - 3, colorBorderLeft);\n        this.bitmapData.setPixel(this.dimension.xAxis - 2 + Math.floor(m / 2), this.h - m - 1, colorBorderLeft);\n    }\n\n    // flood fill\n    this.bitmapData.floodFill(this.dimension.yAxis - 1, 1, this.color.leftSlope);\n    this.bitmapData.floodFill(this.dimension.xAxis, this.h - 3, this.color.right);\n    // hack single pixel\n    this.bitmapData.setPixel(this.dimension.xAxis - 1, this.h - 2, this.color.right);\n\n    // highlight\n    if (this.border) {\n        for (n = 1; n < this.dimension.yAxis * 2 - 3; n += 1) {\n            this.bitmapData.setPixel(this.dimension.xAxis - 2 + Math.floor(n / 2), this.h - n - 1, this.color.borderHighlight);\n        }\n    }\n};\n\n// public methods\np.toString = function () {\n    return '[SlopeSouth]';\n};\n\nmodule.exports = SlopeSouth;\n\n\n//# sourceURL=webpack:///./node_modules/obelisk.js/src/primitives/SlopeSouth.js?");

/***/ }),

/***/ "./node_modules/obelisk.js/src/primitives/SlopeWest.js":
/*!*************************************************************!*\
  !*** ./node_modules/obelisk.js/src/primitives/SlopeWest.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/*jslint node: true*/\n\n\n\nvar SlopeDimension = __webpack_require__(/*! ../dimensions/SlopeDimension */ \"./node_modules/obelisk.js/src/dimensions/SlopeDimension.js\");\nvar SlopeColor = __webpack_require__(/*! ../colors/SlopeColor */ \"./node_modules/obelisk.js/src/colors/SlopeColor.js\");\nvar Matrix = __webpack_require__(/*! ../geom/Matrix */ \"./node_modules/obelisk.js/src/geom/Matrix.js\");\nvar BitmapData = __webpack_require__(/*! ../display/BitmapData */ \"./node_modules/obelisk.js/src/display/BitmapData.js\");\nvar AbstractPrimitive = __webpack_require__(/*! ./AbstractPrimitive */ \"./node_modules/obelisk.js/src/primitives/AbstractPrimitive.js\");\nvar SideY = __webpack_require__(/*! ./SideY */ \"./node_modules/obelisk.js/src/primitives/SideY.js\");\nvar SideYDimension = __webpack_require__(/*! ../dimensions/SideYDimension */ \"./node_modules/obelisk.js/src/dimensions/SideYDimension.js\");\nvar SideColor = __webpack_require__(/*! ../colors/SideColor */ \"./node_modules/obelisk.js/src/colors/SideColor.js\");\nvar PixelObject = __webpack_require__(/*! ../display/PixelObject */ \"./node_modules/obelisk.js/src/display/PixelObject.js\");\n\nvar SlopeWest, p;\nSlopeWest = function (dimension, color, border, useDefaultCanvas) {\n    this.initialize(dimension, color, border, useDefaultCanvas);\n};\np = SlopeWest.prototype = new AbstractPrimitive();\n\n// constructor\np.initialize = function (dimension, color, border, useDefaultCanvas) {\n    this.initRender(dimension, color, border, useDefaultCanvas);\n    this.initRectangle();\n    this.initBitmapData();\n    this.build();\n    this.renderBitmapDataForCanvas();\n\n    return this;\n};\n\n// private method\np.initRender = function (dimension, color, border, useDefaultCanvas) {\n    this.useDefaultCanvas = useDefaultCanvas || false;\n    this.border = border || border === undefined;\n    this.dimension = dimension === undefined ? new SlopeDimension() : dimension;\n    this.color = color === undefined ? new SlopeColor() : color;\n};\n\np.initRectangle = function () {\n    this.w = this.dimension.xAxis + this.dimension.yAxis;\n    this.h = this.dimension.xAxis * 3 / 2 + this.dimension.yAxis / 2;\n\n    // 22.6 degrees implementation\n    this.w -= 2;\n    this.h -= 3;\n\n    // the matrix offset between the bitmap and the 3d pixel coordinate ZERO point\n    this.matrix = new Matrix();\n    this.matrix.tx = -(this.dimension.yAxis - 2);\n    this.matrix.ty = -(this.dimension.xAxis - 2);\n};\n\np.initBitmapData = function () {\n    this.bitmapData = new BitmapData(this.w, this.h, this.useDefaultCanvas);\n};\np.renderBitmapDataForCanvas = function () {\n    this.canvas = this.bitmapData.canvas;\n};\n\np.build = function () {\n    var colorBorderLeft, colorBorderRight, colorBorderHighlight,\n        sideY, poY, ctx, bmd,\n        i, j, n;\n\n    colorBorderLeft = this.border ? this.color.border : this.color.left;\n    colorBorderRight = this.border ? this.color.border : this.color.right;\n    colorBorderHighlight = this.border ? this.color.borderHighlight : this.color.left;\n\n    sideY = new SideY(\n        new SideYDimension(this.dimension.yAxis, this.h - this.dimension.yAxis / 2),\n        new SideColor(colorBorderRight, this.color.right)\n    );\n\n    poY = new PixelObject(sideY);\n\n    ctx = this.bitmapData.context;\n    ctx.drawImage(poY.canvas, poY.x + this.w - 2, poY.y + this.h - this.dimension.yAxis / 2);\n\n    bmd = new BitmapData(this.w, this.h);\n\n    // close the path for floodfill\n    for (i = this.h - this.dimension.xAxis * 3 / 2 + 2; i < this.h; i += 1) {\n        bmd.setPixel(this.dimension.xAxis - 2, i, colorBorderLeft);\n    }\n\n    //x axis\n    for (j = 0; j < this.dimension.xAxis - 1; j += 1) {\n        bmd.setPixel(j, this.dimension.xAxis + this.dimension.yAxis / 2 - 3 + Math.floor(j / 2), colorBorderLeft);\n        bmd.setPixel(j, this.dimension.xAxis + this.dimension.yAxis / 2 - 3 - j, colorBorderLeft);\n    }\n\n    // flood fill\n    bmd.floodFill(this.dimension.xAxis - 3, this.h - 3, this.color.left);\n\n    //highlight\n    for (n = this.dimension.yAxis / 2; n < this.h - 1; n += 1) {\n        bmd.setPixel(this.dimension.xAxis - 2, n, colorBorderHighlight);\n    }\n\n    bmd.context.putImageData(bmd.imageData, 0, 0);\n    ctx.drawImage(bmd.canvas, 0, 0);\n};\n\n// public methods\np.toString = function () {\n    return '[SlopeWest]';\n};\n\nmodule.exports = SlopeWest;\n\n\n//# sourceURL=webpack:///./node_modules/obelisk.js/src/primitives/SlopeWest.js?");

/***/ }),

/***/ "./node_modules/obelisk.js/src/utils/CanvasManager.js":
/*!************************************************************!*\
  !*** ./node_modules/obelisk.js/src/utils/CanvasManager.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/*jslint node: true*/\n/*global document:true*/\n\n\n\nvar CanvasManager, p;\nCanvasManager = function () {\n    throw new Error('CanvasManager is a static Class, cannot be instanced.');\n};\np = CanvasManager;\n\n// public properties\np.defaultCanvas = null;\n\n// public methods\np.getDefaultCanvas = function () {\n    p.defaultCanvas = p.defaultCanvas || document.createElement('canvas');\n    return p.defaultCanvas;\n};\n\np.getNewCanvas = function () {\n    return document.createElement('canvas');\n};\n\np.toString = function () {\n    return '[CanvasManager]';\n};\n\nmodule.exports = CanvasManager;\n\n\n//# sourceURL=webpack:///./node_modules/obelisk.js/src/utils/CanvasManager.js?");

/***/ }),

/***/ "./node_modules/obelisk.js/src/utils/CanvasTool.js":
/*!*********************************************************!*\
  !*** ./node_modules/obelisk.js/src/utils/CanvasTool.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/*jslint node: true*/\n\n\n\nvar CanvasTool, p;\n\nCanvasTool = function () {\n    throw new Error('CanvasTool is a static Class, cannot be instanced.');\n};\np = CanvasTool;\n\n// public methods\np.getPixel = function (imageData, x, y) {\n    var data, index, r, g, b;\n\n    data = imageData.data;\n    index = (y * imageData.width + x) * 4;\n    r = data[index];\n    g = data[index + 1];\n    b = data[index + 2];\n\n    return ((r << 16) | (g << 8) | b);\n};\n\np.toString = function () {\n    return '[CanvasTool]';\n};\n\nmodule.exports = CanvasTool;\n\n\n//# sourceURL=webpack:///./node_modules/obelisk.js/src/utils/CanvasTool.js?");

/***/ }),

/***/ "./node_modules/obelisk.js/src/utils/ColorGeom.js":
/*!********************************************************!*\
  !*** ./node_modules/obelisk.js/src/utils/ColorGeom.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("﻿/*jslint node:true*/\n\n\n\nvar ColorGeom, p;\n\nColorGeom = function () {\n    throw new Error('ColorGeom is a static Class, cannot be instanced.');\n};\np = ColorGeom;\n\n// public methods\np.get32 = function (color) {\n    return color < 0xFF000000 ? (color + 0xFF000000) : color;\n};\n\np.applyBrightness = function (color, brightness, highlight) {\n    var a, r, g, b, y, v, u;\n\n    a = ((color >>> 24) & 0x000000FF);\n    r = ((color >>> 16) & 0x000000FF);\n    g = ((color >>> 8) & 0x000000FF);\n    b = (color & 0x000000FF);\n\n    y = ((r * 313524) >> 20) + ((g * 615514) >> 20) + ((b * 119538) >> 20);\n    u = -((155189 * r) >> 20) - ((303038 * g) >> 20) + ((458227 * b) >> 20);\n    v = ((644874 * r) >> 20) - ((540016 * g) >> 20) - ((104857 * b) >> 20);\n\n    if (!highlight) {\n        y += brightness;\n    } else {\n        y = 60 + Math.pow(y, 1.2);\n    }\n\n    r = y + ((1195376 * v) >> 20);\n    g = y - ((408944 * u) >> 20) - ((608174 * v) >> 20);\n    b = y + ((2128609 * u) >> 20);\n\n    r = Math.max(0, Math.min(r, 255));\n    g = Math.max(0, Math.min(g, 255));\n    b = Math.max(0, Math.min(b, 255));\n\n    return (a << 24) | (r << 16) | (g << 8) | b;\n};\n\np.toString = function () {\n    return '[ColorGeom]';\n};\n\nmodule.exports = ColorGeom;\n\n\n//# sourceURL=webpack:///./node_modules/obelisk.js/src/utils/ColorGeom.js?");

/***/ }),

/***/ "./node_modules/obelisk.js/src/utils/ColorPattern.js":
/*!***********************************************************!*\
  !*** ./node_modules/obelisk.js/src/utils/ColorPattern.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/*jslint node: true*/\n\n\n\nvar ColorPattern, p;\n\nColorPattern = function () {\n    throw new Error('ColorPattern is a static Class, cannot be instanced.');\n};\np = ColorPattern;\n\n// public properties\np.GRASS_GREEN = 0xCCFF00;\np.YELLOW = 0xFFFF00;\np.WINE_RED = 0xFF0099;\np.PINK = 0xFF7CBF;\np.PURPLE = 0xCC00FF;\np.BLUE = 0x00CCFF;\np.GRAY = 0xEEEEEE;\np.BLACK = 0x666666;\np.FINE_COLORS =\n    [\n        p.GRASS_GREEN,\n        p.YELLOW,\n        p.WINE_RED,\n        p.PINK,\n        p.PURPLE,\n        p.BLUE,\n        p.GRAY,\n        p.BLACK\n    ];\n\n// public methods\np.getRandomComfortableColor = function () {\n    return p.FINE_COLORS[Math.floor(Math.random() * p.FINE_COLORS.length)];\n};\n\np.toString = function () {\n    return '[ColorPattern]';\n};\n\nmodule.exports = ColorPattern;\n\n\n//# sourceURL=webpack:///./node_modules/obelisk.js/src/utils/ColorPattern.js?");

/***/ })

}]);